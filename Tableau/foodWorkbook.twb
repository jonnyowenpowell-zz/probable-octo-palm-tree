<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='FoodTypeVSCause' inline='true' name='federated.06jweit1wnedaq1emelrk1ym4ejy' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FoodTypeVSCause' name='semistructpassivestore-direct.1rydmvz01z54n2188orjn05lraro'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/FileHandling' filename='C:\Users\Stewart\Documents\GitHub\probable-octo-palm-tree\FileHandling\FoodTypeVSCauseCleanedData.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[FoodTypeVSCause.json]'>
                  <map key='results' value='true' />
                  <map key='results.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1rydmvz01z54n2188orjn05lraro' name='FoodTypeVSCause.json' table='[FoodTypeVSCause.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[FoodTypeVSCause.json].[Document Index (generated)]' />
          <map key='[address_1]' value='[FoodTypeVSCause.json].[results.Value.address_1]' />
          <map key='[address_2]' value='[FoodTypeVSCause.json].[results.Value.address_2]' />
          <map key='[center_classification_date]' value='[FoodTypeVSCause.json].[results.Value.center_classification_date]' />
          <map key='[city]' value='[FoodTypeVSCause.json].[results.Value.city]' />
          <map key='[classification]' value='[FoodTypeVSCause.json].[results.Value.classification]' />
          <map key='[code_info]' value='[FoodTypeVSCause.json].[results.Value.code_info]' />
          <map key='[country]' value='[FoodTypeVSCause.json].[results.Value.country]' />
          <map key='[distribution_pattern]' value='[FoodTypeVSCause.json].[results.Value.distribution_pattern]' />
          <map key='[event_id]' value='[FoodTypeVSCause.json].[results.Value.event_id]' />
          <map key='[general_food]' value='[FoodTypeVSCause.json].[results.Value.general_food]' />
          <map key='[initial_firm_notification]' value='[FoodTypeVSCause.json].[results.Value.initial_firm_notification]' />
          <map key='[more_code_info]' value='[FoodTypeVSCause.json].[results.Value.more_code_info]' />
          <map key='[postal_code]' value='[FoodTypeVSCause.json].[results.Value.postal_code]' />
          <map key='[product_description]' value='[FoodTypeVSCause.json].[results.Value.product_description]' />
          <map key='[product_quantity]' value='[FoodTypeVSCause.json].[results.Value.product_quantity]' />
          <map key='[product_type]' value='[FoodTypeVSCause.json].[results.Value.product_type]' />
          <map key='[reason]' value='[FoodTypeVSCause.json].[results.Value.reason]' />
          <map key='[reason_for_recall]' value='[FoodTypeVSCause.json].[results.Value.reason_for_recall]' />
          <map key='[recall_initiation_date]' value='[FoodTypeVSCause.json].[results.Value.recall_initiation_date]' />
          <map key='[recall_number]' value='[FoodTypeVSCause.json].[results.Value.recall_number]' />
          <map key='[recalling_firm]' value='[FoodTypeVSCause.json].[results.Value.recalling_firm]' />
          <map key='[report_date]' value='[FoodTypeVSCause.json].[results.Value.report_date]' />
          <map key='[results Index (generated)]' value='[FoodTypeVSCause.json].[results.Index (generated)]' />
          <map key='[specific_food]' value='[FoodTypeVSCause.json].[results.Value.specific_food]' />
          <map key='[specific_reason]' value='[FoodTypeVSCause.json].[results.Value.specific_reason]' />
          <map key='[state]' value='[FoodTypeVSCause.json].[results.Value.state]' />
          <map key='[status]' value='[FoodTypeVSCause.json].[results.Value.status]' />
          <map key='[termination_date]' value='[FoodTypeVSCause.json].[results.Value.termination_date]' />
          <map key='[voluntary_mandated]' value='[FoodTypeVSCause.json].[results.Value.voluntary_mandated]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[results Index (generated)]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.address_1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address_1]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.address_1</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.address_2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address_2]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.address_2</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.center_classification_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[center_classification_date]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.center_classification_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.classification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[classification]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.classification</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.code_info</remote-name>
            <remote-type>130</remote-type>
            <local-name>[code_info]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.code_info</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.distribution_pattern</remote-name>
            <remote-type>130</remote-type>
            <local-name>[distribution_pattern]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.distribution_pattern</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.event_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[event_id]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.event_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.general_food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[general_food]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.general_food</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.initial_firm_notification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[initial_firm_notification]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.initial_firm_notification</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.more_code_info</remote-name>
            <remote-type>130</remote-type>
            <local-name>[more_code_info]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.more_code_info</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.product_description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_description]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.product_description</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.product_quantity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_quantity]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.product_quantity</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.product_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.reason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reason]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.reason</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.reason_for_recall</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reason_for_recall]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.reason_for_recall</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.recall_initiation_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[recall_initiation_date]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.recall_initiation_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.recall_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[recall_number]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.recall_number</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.recalling_firm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[recalling_firm]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.recalling_firm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.report_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.report_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.specific_food</remote-name>
            <remote-type>130</remote-type>
            <local-name>[specific_food]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.specific_food</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.specific_reason</remote-name>
            <remote-type>130</remote-type>
            <local-name>[specific_reason]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.specific_reason</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.termination_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[termination_date]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.termination_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.voluntary_mandated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[voluntary_mandated]</local-name>
            <parent-name>[FoodTypeVSCause.json]</parent-name>
            <remote-alias>results.Value.voluntary_mandated</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per FoodTypeVSCause.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at FoodTypeVSCause.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per results]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([results Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at results level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address 1' datatype='string' name='[address_1]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.address_1</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Address 2' datatype='string' name='[address_2]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.address_2</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Center Classification Date' datatype='string' name='[center_classification_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.center_classification_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Classification' datatype='string' name='[classification]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.classification</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.code_info</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Distribution Pattern' datatype='string' name='[distribution_pattern]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.distribution_pattern</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Event Id' datatype='string' name='[event_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.event_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='General Food' datatype='string' name='[general_food]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.general_food</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Initial Firm Notification' datatype='string' name='[initial_firm_notification]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.initial_firm_notification</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='More Code Info' datatype='string' name='[more_code_info]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.more_code_info</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.postal_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Product Description' datatype='string' name='[product_description]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.product_description</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Product Quantity' datatype='string' name='[product_quantity]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.product_quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.product_type</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.reason</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Reason For Recall' datatype='string' name='[reason_for_recall]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.reason_for_recall</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Recall Initiation Date' datatype='string' name='[recall_initiation_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.recall_initiation_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Recall Number' datatype='string' name='[recall_number]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.recall_number</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Recalling Firm' datatype='string' name='[recalling_firm]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.recalling_firm</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Report Date' datatype='string' name='[report_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.report_date</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[results Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>results.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Specific Food' datatype='string' name='[specific_food]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.specific_food</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Specific Reason' datatype='string' name='[specific_reason]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.specific_reason</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.state</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Termination Date' datatype='string' name='[termination_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.termination_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Voluntary Mandated' datatype='string' name='[voluntary_mandated]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.voluntary_mandated</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Food Type VS Cause' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </folder>
      <folder name='Results' role='dimensions'>
        <folder-item name='[address_1]' type='field' />
        <folder-item name='[address_2]' type='field' />
        <folder-item name='[center_classification_date]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[classification]' type='field' />
        <folder-item name='[code_info]' type='field' />
        <folder-item name='[country]' type='field' />
        <folder-item name='[distribution_pattern]' type='field' />
        <folder-item name='[event_id]' type='field' />
        <folder-item name='[general_food]' type='field' />
        <folder-item name='[initial_firm_notification]' type='field' />
        <folder-item name='[more_code_info]' type='field' />
        <folder-item name='[postal_code]' type='field' />
        <folder-item name='[product_description]' type='field' />
        <folder-item name='[product_quantity]' type='field' />
        <folder-item name='[product_type]' type='field' />
        <folder-item name='[reason]' type='field' />
        <folder-item name='[reason_for_recall]' type='field' />
        <folder-item name='[recall_initiation_date]' type='field' />
        <folder-item name='[recall_number]' type='field' />
        <folder-item name='[recalling_firm]' type='field' />
        <folder-item name='[report_date]' type='field' />
        <folder-item name='[results Index (generated)]' type='field' />
        <folder-item name='[specific_food]' type='field' />
        <folder-item name='[specific_reason]' type='field' />
        <folder-item name='[state]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[termination_date]' type='field' />
        <folder-item name='[voluntary_mandated]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.424821' measure-ordering='alphabetic' measure-percentage='0.575179' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='food-enforcement_ProcessedData' inline='true' name='federated.0aod3ah1xoffqa1azx3491fdo1jb' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='food-enforcement_ProcessedData' name='semistructpassivestore-direct.1vktxt21jxk4ah1epbioc1eedhxg'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/FileHandling' filename='food-enforcement_ProcessedData.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[food-enforcement_ProcessedData.json]'>
                  <map key='results' value='true' />
                  <map key='results.Value' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1vktxt21jxk4ah1epbioc1eedhxg' name='food-enforcement_ProcessedData.json' table='[food-enforcement_ProcessedData.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[food-enforcement_ProcessedData.json].[Document Index (generated)]' />
          <map key='[address_1]' value='[food-enforcement_ProcessedData.json].[results.Value.address_1]' />
          <map key='[address_2]' value='[food-enforcement_ProcessedData.json].[results.Value.address_2]' />
          <map key='[center_classification_date]' value='[food-enforcement_ProcessedData.json].[results.Value.center_classification_date]' />
          <map key='[city]' value='[food-enforcement_ProcessedData.json].[results.Value.city]' />
          <map key='[classification]' value='[food-enforcement_ProcessedData.json].[results.Value.classification]' />
          <map key='[code_info]' value='[food-enforcement_ProcessedData.json].[results.Value.code_info]' />
          <map key='[country]' value='[food-enforcement_ProcessedData.json].[results.Value.country]' />
          <map key='[distribution_pattern]' value='[food-enforcement_ProcessedData.json].[results.Value.distribution_pattern]' />
          <map key='[event_id]' value='[food-enforcement_ProcessedData.json].[results.Value.event_id]' />
          <map key='[initial_firm_notification]' value='[food-enforcement_ProcessedData.json].[results.Value.initial_firm_notification]' />
          <map key='[more_code_info]' value='[food-enforcement_ProcessedData.json].[results.Value.more_code_info]' />
          <map key='[postal_code]' value='[food-enforcement_ProcessedData.json].[results.Value.postal_code]' />
          <map key='[product_description]' value='[food-enforcement_ProcessedData.json].[results.Value.product_description]' />
          <map key='[product_quantity]' value='[food-enforcement_ProcessedData.json].[results.Value.product_quantity]' />
          <map key='[product_type]' value='[food-enforcement_ProcessedData.json].[results.Value.product_type]' />
          <map key='[reason_for_recall]' value='[food-enforcement_ProcessedData.json].[results.Value.reason_for_recall]' />
          <map key='[recall_initiation_date]' value='[food-enforcement_ProcessedData.json].[results.Value.recall_initiation_date]' />
          <map key='[recall_number]' value='[food-enforcement_ProcessedData.json].[results.Value.recall_number]' />
          <map key='[recalling_firm]' value='[food-enforcement_ProcessedData.json].[results.Value.recalling_firm]' />
          <map key='[report_date]' value='[food-enforcement_ProcessedData.json].[results.Value.report_date]' />
          <map key='[results Index (generated)]' value='[food-enforcement_ProcessedData.json].[results.Index (generated)]' />
          <map key='[state]' value='[food-enforcement_ProcessedData.json].[results.Value.state]' />
          <map key='[status]' value='[food-enforcement_ProcessedData.json].[results.Value.status]' />
          <map key='[termination_date]' value='[food-enforcement_ProcessedData.json].[results.Value.termination_date]' />
          <map key='[voluntary_mandated]' value='[food-enforcement_ProcessedData.json].[results.Value.voluntary_mandated]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[results Index (generated)]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.address_1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address_1]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.address_1</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.address_2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address_2]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.address_2</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.center_classification_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[center_classification_date]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.center_classification_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.classification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[classification]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.classification</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.code_info</remote-name>
            <remote-type>130</remote-type>
            <local-name>[code_info]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.code_info</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.distribution_pattern</remote-name>
            <remote-type>130</remote-type>
            <local-name>[distribution_pattern]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.distribution_pattern</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.event_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[event_id]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.event_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.initial_firm_notification</remote-name>
            <remote-type>130</remote-type>
            <local-name>[initial_firm_notification]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.initial_firm_notification</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.more_code_info</remote-name>
            <remote-type>130</remote-type>
            <local-name>[more_code_info]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.more_code_info</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.product_description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_description]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.product_description</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.product_quantity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_quantity]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.product_quantity</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.product_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.reason_for_recall</remote-name>
            <remote-type>130</remote-type>
            <local-name>[reason_for_recall]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.reason_for_recall</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.recall_initiation_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[recall_initiation_date]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.recall_initiation_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.recall_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[recall_number]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.recall_number</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.recalling_firm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[recalling_firm]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.recalling_firm</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.report_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.report_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.termination_date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[termination_date]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.termination_date</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>results.Value.voluntary_mandated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[voluntary_mandated]</local-name>
            <parent-name>[food-enforcement_ProcessedData.json]</parent-name>
            <remote-alias>results.Value.voluntary_mandated</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per food-enforcement_ProcessedData.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at food-enforcement_ProcessedData.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per results]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([results Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at results level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Address 1' datatype='string' name='[address_1]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.address_1</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Address 2' datatype='string' name='[address_2]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.address_2</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Center Classification Date' datatype='string' name='[center_classification_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.center_classification_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Classification' datatype='string' name='[classification]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.classification</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Code Info' datatype='string' name='[code_info]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.code_info</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Distribution Pattern' datatype='string' name='[distribution_pattern]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.distribution_pattern</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Event Id' datatype='string' name='[event_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.event_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Initial Firm Notification' datatype='string' name='[initial_firm_notification]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.initial_firm_notification</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='More Code Info' datatype='string' name='[more_code_info]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.more_code_info</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.postal_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Product Description' datatype='string' name='[product_description]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.product_description</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Product Quantity' datatype='string' name='[product_quantity]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.product_quantity</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.product_type</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Reason For Recall' datatype='string' name='[reason_for_recall]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.reason_for_recall</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Recall Initiation Date' datatype='string' name='[recall_initiation_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.recall_initiation_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Recall Number' datatype='string' name='[recall_number]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.recall_number</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Recalling Firm' datatype='string' name='[recalling_firm]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.recalling_firm</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Report Date' datatype='string' name='[report_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.report_date</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[results Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>results.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.state</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Termination Date' datatype='string' name='[termination_date]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.termination_date</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Voluntary Mandated' datatype='string' name='[voluntary_mandated]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>results.Value.voluntary_mandated</run>
          </formatted-text>
        </desc>
      </column>
      <folder name='Results' role='dimensions'>
        <folder-item name='[address_1]' type='field' />
        <folder-item name='[address_2]' type='field' />
        <folder-item name='[center_classification_date]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[classification]' type='field' />
        <folder-item name='[code_info]' type='field' />
        <folder-item name='[country]' type='field' />
        <folder-item name='[distribution_pattern]' type='field' />
        <folder-item name='[event_id]' type='field' />
        <folder-item name='[initial_firm_notification]' type='field' />
        <folder-item name='[more_code_info]' type='field' />
        <folder-item name='[postal_code]' type='field' />
        <folder-item name='[product_description]' type='field' />
        <folder-item name='[product_quantity]' type='field' />
        <folder-item name='[product_type]' type='field' />
        <folder-item name='[reason_for_recall]' type='field' />
        <folder-item name='[recall_initiation_date]' type='field' />
        <folder-item name='[recall_number]' type='field' />
        <folder-item name='[recalling_firm]' type='field' />
        <folder-item name='[report_date]' type='field' />
        <folder-item name='[results Index (generated)]' type='field' />
        <folder-item name='[state]' type='field' />
        <folder-item name='[status]' type='field' />
        <folder-item name='[termination_date]' type='field' />
        <folder-item name='[voluntary_mandated]' type='field' />
      </folder>
      <folder name='food-enforcement ProcessedData' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.699284' measure-ordering='alphabetic' measure-percentage='0.300716' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Normalized Values By Farmland (Recall per State)' inline='true' name='federated.0vtwktr1bo1h7s1402gvq0xm989e' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Recall per State' name='excel-direct.0kl06qd1m7m3as15jmf910noraaj'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/Data/Recall per State.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0kl06qd1m7m3as15jmf910noraaj' name='Normalized Values By Farmland' table='[&apos;Normalized Values By Farmland$&apos;]' type='table'>
          <columns gridOrigin='A1:J51:no:A1:J51:1' header='yes' lost='0' outcome='1' processed='350'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='string' name='State' ordinal='3' />
            <column datatype='integer' name='Number' ordinal='4' />
            <column datatype='integer' name='Total acres' ordinal='5' />
            <column datatype='real' name='Farmland' ordinal='6' />
            <column datatype='integer' name='Avg. acres' ordinal='7' />
            <column datatype='integer' name='Number of Records' ordinal='8' />
            <column datatype='real' name='X recalls per acre' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total acres</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total acres]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Total acres</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Farmland</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Farmland]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Farmland</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg. acres</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg. acres]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Avg. acres</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X recalls per acre</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X recalls per acre]</local-name>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias>X recalls per acre</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Normalized Values By Farmland]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J51:no:A1:J51:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>350</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[F3]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='integer' name='[Number]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Rank]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.424821' measure-ordering='alphabetic' measure-percentage='0.575179' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Normalized Values By ! (Recall per State)' inline='true' name='federated.1pa7dd50k96rdm17mdkd20iww47a' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Recall per State' name='excel-direct.0qp35gk0fk1ifb17dindu05cku2b'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/Data/Recall per State.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qp35gk0fk1ifb17dindu05cku2b' name='Normalized Values By !' table='[&apos;Normalized Values By $$&apos;]' type='table'>
          <columns gridOrigin='A1:F51:no:A1:F51:1' header='yes' lost='0' outcome='1' processed='150'>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='F3' ordinal='2' />
            <column datatype='real' name='State receipts for all commodities ($1mill)' ordinal='3' />
            <column datatype='integer' name='Number of Records' ordinal='4' />
            <column datatype='real' name='every dollar causes x recalls' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F3]</local-name>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias>F3</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State receipts for all commodities ($1mill)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[State receipts for all commodities ($1mill)]</local-name>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias>State receipts for all commodities ($1mill)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>every dollar causes x recalls</remote-name>
            <remote-type>5</remote-type>
            <local-name>[every dollar causes x recalls]</local-name>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias>every dollar causes x recalls</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Normalized Values By !]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F51:no:A1:F51:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>150</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State'>
          <field>[Country]</field>
          <field>[State]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.47494' measure-ordering='alphabetic' measure-percentage='0.52506' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Distribution of Recalls'>
      <table>
        <view>
          <datasources>
            <datasource caption='food-enforcement_ProcessedData' name='federated.0aod3ah1xoffqa1azx3491fdo1jb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0aod3ah1xoffqa1azx3491fdo1jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.state</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:state:nk]' direction='ASC' />
          <slices>
            <column>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:country:nk]' />
              <lod column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:state:nk]' />
              <size column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[Latitude (generated)]</rows>
        <cols>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Distribution of Recalls, Normalized By Farmland'>
      <table>
        <view>
          <datasources>
            <datasource caption='Normalized Values By Farmland (Recall per State)' name='federated.0vtwktr1bo1h7s1402gvq0xm989e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vtwktr1bo1h7s1402gvq0xm989e'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[X recalls per acre]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[X recalls per acre]' derivation='Sum' name='[sum:X recalls per acre:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vtwktr1bo1h7s1402gvq0xm989e].[none:Country:nk]' />
              <lod column='[federated.0vtwktr1bo1h7s1402gvq0xm989e].[none:State:nk]' />
              <size column='[federated.0vtwktr1bo1h7s1402gvq0xm989e].[sum:X recalls per acre:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vtwktr1bo1h7s1402gvq0xm989e].[Latitude (generated)]</rows>
        <cols>[federated.0vtwktr1bo1h7s1402gvq0xm989e].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Distribution of Recalls, Normalized by income from agriculture'>
      <table>
        <view>
          <datasources>
            <datasource caption='Normalized Values By ! (Recall per State)' name='federated.1pa7dd50k96rdm17mdkd20iww47a' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pa7dd50k96rdm17mdkd20iww47a'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[every dollar causes x recalls]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[every dollar causes x recalls]' derivation='Sum' name='[sum:every dollar causes x recalls:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1pa7dd50k96rdm17mdkd20iww47a].[Longitude (generated)]' field-type='quantitative' max='-6424024.8286835458' min='-14358799.860911123' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1pa7dd50k96rdm17mdkd20iww47a].[Latitude (generated)]' field-type='quantitative' max='6973289.7834242973' min='2394406.0410291008' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1pa7dd50k96rdm17mdkd20iww47a].[none:Country:nk]' />
              <lod column='[federated.1pa7dd50k96rdm17mdkd20iww47a].[none:State:nk]' />
              <size column='[federated.1pa7dd50k96rdm17mdkd20iww47a].[sum:every dollar causes x recalls:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pa7dd50k96rdm17mdkd20iww47a].[Latitude (generated)]</rows>
        <cols>[federated.1pa7dd50k96rdm17mdkd20iww47a].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='How Serious?'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Classification' datatype='string' name='[classification]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.classification</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[classification]' derivation='None' name='[none:classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.reason</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:classification:nk]' />
              <wedge-size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Proportion of Reasons for Recall'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.reason</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' />
              <wedge-size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Proportion of Recalls for Food Types'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='General Food' datatype='string' name='[general_food]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.general_food</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[general_food]' derivation='None' name='[none:general_food:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.reason</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='318' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' />
              <wedge-size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Proportion of Subreasons for Recall'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[specific_reason]' derivation='None' name='[none:specific_reason:nk]' pivot='key' type='nominal' />
            <column caption='Specific Reason' datatype='string' name='[specific_reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.specific_reason</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_reason:nk]' />
              <wedge-size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Propotion of Recalls for Foods'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='General Food' datatype='string' name='[general_food]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.general_food</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[general_food]' derivation='None' name='[none:general_food:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[specific_food]' derivation='None' name='[none:specific_food:nk]' pivot='key' type='nominal' />
            <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.reason</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Specific Food' datatype='string' name='[specific_food]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.specific_food</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:general_food:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:general_food:nk]' member='&quot;chips&quot;' />
                <groupfilter function='member' level='[none:general_food:nk]' member='&quot;dried fruit&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_food:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:specific_food:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:specific_food:nk]' member='&quot;drink&quot;' />
                <groupfilter function='member' level='[none:specific_food:nk]' member='&quot;pizza&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='461' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' />
              <wedge-size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk] / [federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_food:nk])</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='food-enforcement_ProcessedData' name='federated.0aod3ah1xoffqa1azx3491fdo1jb' />
          </datasources>
          <datasource-dependencies datasource='federated.0aod3ah1xoffqa1azx3491fdo1jb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Classification' datatype='string' name='[classification]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.classification</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[classification]' derivation='None' name='[none:classification:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:classification:nk]' />
              <wedge-size column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[sum:Number of Records:qk]' />
              <size column='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.reason</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.state</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]' direction='DESC' />
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;RI&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</column>
            <column>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <text column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]' />
              <text column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' />
              <text column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='FoodTypeVSCause' name='federated.06jweit1wnedaq1emelrk1ym4ejy' />
          </datasources>
          <datasource-dependencies datasource='federated.06jweit1wnedaq1emelrk1ym4ejy'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.country</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[reason]' derivation='None' name='[none:reason:nk]' pivot='key' type='nominal' />
            <column caption='Reason' datatype='string' name='[reason]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>results.Value.reason</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <color column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' />
              <text column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]' />
              <text column='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='93'>
    <window class='worksheet' name='Distribution of Recalls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Distribution of Recalls, Normalized by income from agriculture'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pa7dd50k96rdm17mdkd20iww47a].[sum:every dollar causes x recalls:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pa7dd50k96rdm17mdkd20iww47a].[none:Country:nk]</field>
            <field>[federated.1pa7dd50k96rdm17mdkd20iww47a].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Distribution of Recalls, Normalized By Farmland'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vtwktr1bo1h7s1402gvq0xm989e].[sum:X recalls per acre:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vtwktr1bo1h7s1402gvq0xm989e].[none:Country:nk]</field>
            <field>[federated.0vtwktr1bo1h7s1402gvq0xm989e].[none:F3:nk]</field>
            <field>[federated.0vtwktr1bo1h7s1402gvq0xm989e].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Proportion of Reasons for Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Proportion of Subreasons for Recall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_reason:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_reason:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Proportion of Recalls for Food Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Propotion of Recalls for Foods'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk]</field>
                  <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_food:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;pizza&quot;</bucket>
                  <bucket>&quot;pizza&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:country:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:general_food:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason_for_recall:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:state:nk]</field>
            <field>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:country:nk]</field>
            <field>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:product_type:nk]</field>
            <field>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:classification:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0aod3ah1xoffqa1azx3491fdo1jb].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:classification:nk]</field>
            <field>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:event_id:nk]</field>
            <field>[federated.0aod3ah1xoffqa1azx3491fdo1jb].[none:recall_number:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='How Serious?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:classification:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.06jweit1wnedaq1emelrk1ym4ejy].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:classification:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:reason:nk]</field>
            <field>[federated.06jweit1wnedaq1emelrk1ym4ejy].[none:specific_reason:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Distribution of Recalls' width='192'>
      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
      Dgh4HfD/Ab3xdbU1aXDcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Distribution of Recalls, Normalized By Farmland' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGEElEQVR4nO3dzW/bZADH8d/jJG67tF33UgZjTGgIIYQERzjxD3DjH+LCkRtHLly4cEID
      ceMGAo0xkIY0CuyFbWzdupdmTdLEif1wKkwT2xQnnev+vp+7nefgb57HsR2He/fuxTRNBThq
      pmmqdrtd9TiASiRVDwCoEgHAGgHAGgHAGgHAWrPqAVQhxqiiKBRjVKPRUAih6iGhInYzQIxR
      o9FYf1y9pbMXrmmYZYoxVj0sVMRyBhhmmb78/qKurHd08tiKXljlQqArywDm51K99/Yr2uwN
      dOQgFwGdhW63G92uBMcY/132hBA4BzBmOQNw0GOH3Ukw8DACgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCQGkxRsUYqx7G
      VJpVDwD1lOe5Nu51NBzlOr66olarVfWQSmEGQCmdrZ4++vyMPvj0W93Y2KztTMAMgFKajUSr
      KwcUQtBc69kcRjtLrjzP1Ww2FUKYep+h2+3Gdrs9g+HBSVEU6vb6GueFDi611Wg0dv0zY4y6
      39nS+Uu39c4bL2lubm7qfTIDoJQkSbS8tPjMPzdtNXX86KKSZDard2YA1MrOMiiEMJMlEDMA
      amVWB/4OfgWCNQKANQKANQKANQKANQKANX4GRSkxRmVZphij0jQtdWFq57aGJElmdmFrUswA
      KGU0GunXizd1+rs1dXvbpfaRZZnOXriuB91+ZTfTEQBKu7z+QD/+dlPDUV5q+xCC2vNNNZLZ
      XdiaeAzcCoEyYozq9ra1nY11dKXcvTkxRhVFoSRJZnp1dxKcA6CUEIKWFg9oacp9zOou0rIx
      sQTCvjAYDnX+zxvq9Sc7HyEA7A9RGuXFxCfTnANgXyi7BOIcAPtC2fMJlkCwRgCwRgCwRgCw
      RgCwRgCwRgCwRgCwRgCwRgDYdUVRKMsy5flkzw3kea7xeLyrD8sQAHZdf3ugb366pK1uf6Lt
      bt/t6NLfd0oHsPPY5nA4fOw+CAC7Lm019dapVc3PpRNtt9ye13OHFks/LBNj1NrVDZ37/cZj
      Zx/uBsWue/jbd5KDeWe7aQLY6vVV5IWWl9r/+9Qad4Ni15U9gKd9TDKEoKX2gSfuiwCwrz0t
      IgLAVGKMGo1GijGq1WpV9v8+ZREASosxqrPV0+nv1nSns633331NJ58/UqsICAClxRh19dam
      vj5zWYPhWCdWl/Ti6goBwEMIQasrbb1+8rDuPhjo1ROHanXwS/wMiinlea7OVk/ZONfhg4tq
      zej1pc8KMwCmkiSJDh387++x6nTwSwSAKdXtgH9UvRZswIwRAKwRAKxxDoA9a5q3whdFodFo
      pCRJ1HzCL1PMANiz8jzX2pV1bQ8GE2+7udXTJ1+d089r15/4IA4BYM8qorSx2VeeFxNvOxrn
      urze0f3u4x+GkbgQhj1smpfo5Xmu/vZAzWZD83Nz3A6N+gkhqNksd4g2Gg0tLT79i50lEKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwR
      AKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKwRAKzV
      MoCiKFQUk787FnhUrQKIMWowGOiXtWu6dP22xuNx1UNCzdUugL/W7+vDz37Qx1+cU7e/XfWQ
      UHO1elF2CEGHlxf05qlVvXxsWWmrVsPHHhS63W5st5/+Ru29oigKDYdDJUmiNE0VQqh6SKix
      2n2FJkmihYWFqoeBfaJW5wDArBEArBEArBEArBEArBEArDWzLKt6DEBl/gGtacseV4pv4wAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution of Recalls, Normalized by income from agriculture' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='How Serious?' width='192'>
      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
      jnJ6bQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='184' name='Proportion of Reasons for Recall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Proportion of Recalls for Food Types' width='192'>
      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
    </thumbnail>
    <thumbnail height='184' name='Proportion of Subreasons for Recall' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Propotion of Recalls for Foods' width='192'>
      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
      wbDZggAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='164' name='Sheet 10' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
      eywi5+6/AOTvLZsQuREwAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
