<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SlaughterCounts-Full (SlaughterCountsFull)' inline='true' name='federated.1qviwo00p9dhwe19p0b3v10ttnek' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SlaughterCountsFull' name='excel-direct.1x1s6wj09vtkcg1h9eopg0orrut8'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/Data/Production Info/SlaughterCountsFull.xls' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year' datatype='datetime' name='[Type 1/]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.502513' measure-ordering='alphabetic' measure-percentage='0.497487' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ --Beef cows:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ --Bulls and stags:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ --Boars and stags:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ Calves:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ Cattle:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ --Steers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ --Barrows and gilts:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ --Dairy cows:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ Hogs:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1qviwo00p9dhwe19p0b3v10ttnek].[sum:Federally inspected 3/ Sheep and lambs:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Sumaries (Sumaries)' inline='true' name='federated.0r9ji541dyg6iu19c8l271kigcz3' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sumaries' name='excel-direct.0n3he540ctpsde1crs62y0ug3hz4'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/Data/Production Info/Sumaries.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0n3he540ctpsde1crs62y0ug3hz4' name='Sumaries' table='[Sumaries$]' type='table'>
          <columns gridOrigin='A1:E23:no:A1:E23:2' header='no' lost='0' outcome='1' processed='105'>
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='0' />
            <column datatype='integer' name='Totals (lb) Beef' ordinal='1' />
            <column datatype='integer' name='Totals (lb) Chicken' ordinal='2' />
            <column datatype='integer' name='Totals (lb) Lamb' ordinal='3' />
            <column datatype='integer' name='Totals (lb) Pork' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sumaries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E23:no:A1:E23:2&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>105</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sumaries]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totals (lb) Beef</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totals (lb) Beef]</local-name>
            <parent-name>[Sumaries]</parent-name>
            <remote-alias>Totals (lb) Beef</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totals (lb) Chicken</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totals (lb) Chicken]</local-name>
            <parent-name>[Sumaries]</parent-name>
            <remote-alias>Totals (lb) Chicken</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totals (lb) Lamb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totals (lb) Lamb]</local-name>
            <parent-name>[Sumaries]</parent-name>
            <remote-alias>Totals (lb) Lamb</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Totals (lb) Pork</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Totals (lb) Pork]</local-name>
            <parent-name>[Sumaries]</parent-name>
            <remote-alias>Totals (lb) Pork</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Totals (lb) Beef]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Totals (lb) Chicken]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Totals (lb) Lamb]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Totals (lb) Pork]' role='measure' type='quantitative' />
      <column-instance column='[Totals (lb) Beef]' derivation='Attribute' name='[attr:Totals (lb) Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Chicken]' derivation='Attribute' name='[attr:Totals (lb) Chicken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Beef]' derivation='Count' name='[cnt:Totals (lb) Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Beef]' derivation='CountD' name='[ctd:Totals (lb) Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Chicken]' derivation='CountD' name='[ctd:Totals (lb) Chicken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Beef]' derivation='Sum' name='[sum:Totals (lb) Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Chicken]' derivation='Sum' name='[sum:Totals (lb) Chicken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Lamb]' derivation='Sum' name='[sum:Totals (lb) Lamb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Totals (lb) Pork]' derivation='Sum' name='[sum:Totals (lb) Pork:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.394472' measure-ordering='alphabetic' measure-percentage='0.605528' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[attr:Totals (lb) Beef:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[cnt:Totals (lb) Beef:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[ctd:Totals (lb) Beef:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Beef:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Pork:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Lamb:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[attr:Totals (lb) Chicken:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[ctd:Totals (lb) Chicken:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Chicken:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='SlaughterCounts-Full (SlaughterCountsFull) (2)' inline='true' name='federated.1jl8qxh16vnp2u1e500mi10qmnd4' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SlaughterCountsFull' name='excel-direct.1glih0k0edigxv10otosu0fwn0xt'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/Data/Production Info/SlaughterCountsFull.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1glih0k0edigxv10otosu0fwn0xt' name='SlaughterCounts-Full' table='[&apos;SlaughterCounts-Full$&apos;]' type='table'>
          <columns gridOrigin='A1:AJ896:no:A1:AJ896:3' header='no' lost='0' outcome='1' processed='20364'>
            <column datatype='date' date-parse-format='MMM-yyyy' name='Livestock and poultry slaughter (1,000 head) Type 1/' ordinal='0' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ Cattle' ordinal='1' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Steers' ordinal='2' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Heifers' ordinal='3' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Beef cows' ordinal='4' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Dairy cows' ordinal='5' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Bulls and stags' ordinal='6' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ Calves' ordinal='7' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ Hogs' ordinal='8' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Barrows and gilts' ordinal='9' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Sows' ordinal='10' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Boars and stags' ordinal='11' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ Sheep and lambs' ordinal='12' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Lambs and yearlings' ordinal='13' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Commercial 2/ --Mature sheep' ordinal='14' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Cattle' ordinal='15' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Steers' ordinal='16' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Heifers' ordinal='17' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Beef cows' ordinal='18' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Dairy cows' ordinal='19' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Bulls and stags' ordinal='20' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Calves' ordinal='21' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef' ordinal='22' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Hogs' ordinal='23' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Barrows and gilts' ordinal='24' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Sows' ordinal='25' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Boars and stags' ordinal='26' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork' ordinal='27' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Sheep and lambs' ordinal='28' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Lambs and yearlings' ordinal='29' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Mature sheep' ordinal='30' />
            <column datatype='real' name='Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton' ordinal='31' />
            <column datatype='integer' name='Livestock and poultry slaughter (1,000 head) Broilers' ordinal='32' />
            <column datatype='integer' name='Livestock and poultry slaughter (1,000 head) Other chickens' ordinal='33' />
            <column datatype='integer' name='Livestock and poultry slaughter (1,000 head) Turkeys' ordinal='34' />
            <column datatype='integer' name='Total Poultry' ordinal='35' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AJ896:no:A1:AJ896:3&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>20364</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Type 1/</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Type 1/]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Type 1/</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ Cattle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ Cattle]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ Cattle</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Steers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Steers]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Steers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Heifers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Heifers]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Heifers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Beef cows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Beef cows]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Beef cows</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Dairy cows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Dairy cows]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Dairy cows</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Bulls and stags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Bulls and stags]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Bulls and stags</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ Calves</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ Calves]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ Calves</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ Hogs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ Hogs]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ Hogs</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Barrows and gilts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Barrows and gilts]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Barrows and gilts</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Sows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Sows]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Sows</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Boars and stags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Boars and stags]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Boars and stags</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ Sheep and lambs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ Sheep and lambs]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ Sheep and lambs</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Lambs and yearlings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Lambs and yearlings]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Lambs and yearlings</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Mature sheep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Commercial 2/ --Mature sheep]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Commercial 2/ --Mature sheep</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Cattle</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Cattle]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Cattle</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Steers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Steers]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Steers</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Heifers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Heifers]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Heifers</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Beef cows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Beef cows]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Beef cows</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Dairy cows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Dairy cows]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Dairy cows</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Bulls and stags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Bulls and stags]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Bulls and stags</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Calves</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Calves]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Calves</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Hogs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Hogs]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Hogs</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Barrows and gilts</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Barrows and gilts]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Barrows and gilts</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Sows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Sows]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Sows</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Boars and stags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Boars and stags]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Boars and stags</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Sheep and lambs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Sheep and lambs]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Sheep and lambs</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Lambs and yearlings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Lambs and yearlings]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Lambs and yearlings</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Mature sheep</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Mature sheep]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Federally inspected 3/ --Mature sheep</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Broilers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Broilers]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Broilers</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Other chickens</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Other chickens]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Other chickens</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Livestock and poultry slaughter (1,000 head) Turkeys</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Livestock and poultry slaughter (1,000 head) Turkeys]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Livestock and poultry slaughter (1,000 head) Turkeys</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Poultry</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Poultry]</local-name>
            <parent-name>[SlaughterCounts-Full]</parent-name>
            <remote-alias>Total Poultry</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Beef' datatype='real' name='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef]' role='measure' type='quantitative' />
      <column caption='Total Pork' datatype='real' name='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork]' role='measure' type='quantitative' />
      <column caption='Total Lamb &amp; Mutton' datatype='real' name='[Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[Livestock and poultry slaughter (1,000 head) Type 1/]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Total Poultry]' role='measure' type='quantitative' />
      <column-instance column='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef]' derivation='Sum' name='[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork]' derivation='Sum' name='[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton]' derivation='Sum' name='[sum:Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Poultry]' derivation='Sum' name='[sum:Total Poultry:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.105528' measure-ordering='alphabetic' measure-percentage='0.894472' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Total Poultry:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='FSIS Recall_standardized' inline='true' name='federated.12uqawp1ah77qb1eehhzv0gh9zzn' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FSIS Recall_standardized' name='textscan.1p9eyrr1fmrrix1dhwo9p0hi2mi3'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:\Users\Stewart\Documents\GitHub\probable-octo-palm-tree\FileHandling\Pt_2 Meat\Meat_CSV_Processing\FSIS Recall_standardized.csv' dataRefreshTime='' directory='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/FileHandling/Pt_2 Meat/Meat_CSV_Processing' filename='C:/Users/Stewart/AppData/Local/Temp/TableauTemp/0g3iwi71of4r1d1flo0y30o5bcym/FSIS Recall_standardized.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1p9eyrr1fmrrix1dhwo9p0hi2mi3' name='FSIS Recall_standardized.csv' table='[FSIS Recall_standardized#csv$]' type='table'>
          <columns character-set='windows-1252' gridOrigin='A1:M941:no:A1:M941:1' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='Recall Number' ordinal='0' />
            <column datatype='date' name='Open Date' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='string' name='Class(R)' ordinal='3' />
            <column datatype='integer' name='Class(A)' ordinal='4' />
            <column datatype='integer' name='Pounds Recalled' ordinal='5' />
            <column datatype='string' name='Product' ordinal='6' />
            <column datatype='string' name='Problem Type' ordinal='7' />
            <column datatype='integer' name='pork' ordinal='8' />
            <column datatype='integer' name='poultry' ordinal='9' />
            <column datatype='integer' name='lamb' ordinal='10' />
            <column datatype='integer' name='beef' ordinal='11' />
            <column datatype='integer' name='fish' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Recall Number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Recall Number]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Recall Number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Open Date]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Open Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class(R)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Class(R)]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Class(R)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class(A)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Class(A)]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Class(A)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pounds Recalled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pounds Recalled]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Pounds Recalled</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Problem Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Problem Type]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>Problem Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pork</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pork]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>pork</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>poultry</remote-name>
            <remote-type>20</remote-type>
            <local-name>[poultry]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>poultry</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lamb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lamb]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>lamb</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beef</remote-name>
            <remote-type>20</remote-type>
            <local-name>[beef]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>beef</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fish</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fish]</local-name>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias>fish</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FSIS Recall_standardized.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M941:no:A1:M941:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8460</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123608068:qk]&quot;' value='Beef' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123862021:qk]&quot;' value='Fish' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123898886:qk]&quot;' value='Lamb' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466124025863:qk]&quot;' value='Pork' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466124103688:qk]&quot;' value='Poultry' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125746185:qk]&quot;' value='Avg Beef' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125787146:qk]&quot;' value='Avg Fish' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125840395:qk]&quot;' value='Avg Lamb' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125881356:qk]&quot;' value='Avg Pork' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125930509:qk]&quot;' value='Avg Poultry' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167836698:qk]&quot;' value='Beef Recalled' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;' value='Fish Recalled' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;' value='Lamb Recalled' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167963677:qk]&quot;' value='Pork Recalled' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167996446:qk]&quot;' value='Poulty Recalled' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172239903:qk]&quot;' value='Beef Avg' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172629024:qk]&quot;' value='Fish Avg' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172706849:qk]&quot;' value='Lamb Avg' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172727330:qk]&quot;' value='Pork Avg' />
          <alias key='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172756003:qk]&quot;' value='Poulty Avg' />
        </aliases>
      </column>
      <column caption='Beef AVG' datatype='real' name='[Calculation_906349466182426660]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([beef]*[Pounds Recalled])/SUM([beef])' />
      </column>
      <column caption='Fish AVG' datatype='real' name='[Calculation_906349466183073829]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([fish]*[Pounds Recalled])/SUM([fish])' />
      </column>
      <column caption='Lamb AVG' datatype='real' name='[Calculation_906349466183204902]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([lamb]*[Pounds Recalled])/SUM([lamb])' />
      </column>
      <column caption='Pork AVG' datatype='real' name='[Calculation_906349466183770151]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([pork]*[Pounds Recalled])/SUM([pork])' />
      </column>
      <column caption='Poultry AVG' datatype='real' name='[Calculation_906349466183901224]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([poultry]*[Pounds Recalled])/SUM([poultry])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Beef' datatype='integer' name='[beef]' role='measure' type='quantitative' />
      <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
      <column caption='Lamb' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
      <column caption='Pork' datatype='integer' name='[pork]' role='measure' type='quantitative' />
      <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
      <column-instance column='[beef]' derivation='Avg' name='[avg:beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fish]' derivation='Avg' name='[avg:fish:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lamb]' derivation='Avg' name='[avg:lamb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pork]' derivation='Avg' name='[avg:pork:qk]' pivot='key' type='quantitative' />
      <column-instance column='[poultry]' derivation='Avg' name='[avg:poultry:qk]' pivot='key' type='quantitative' />
      <column-instance column='[poultry]' derivation='Count' name='[cnt:poultry:qk]' pivot='key' type='quantitative' />
      <column-instance column='[beef]' derivation='Sum' name='[sum:beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fish]' derivation='Sum' name='[sum:fish:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lamb]' derivation='Sum' name='[sum:lamb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pork]' derivation='Sum' name='[sum:pork:qk]' pivot='key' type='quantitative' />
      <column-instance column='[poultry]' derivation='Sum' name='[sum:poultry:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_906349466182426660]' derivation='User' name='[usr:Calculation_906349466182426660:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_906349466183073829]' derivation='User' name='[usr:Calculation_906349466183073829:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_906349466183204902]' derivation='User' name='[usr:Calculation_906349466183204902:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_906349466183770151]' derivation='User' name='[usr:Calculation_906349466183770151:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_906349466183901224]' derivation='User' name='[usr:Calculation_906349466183901224:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.369347' measure-ordering='alphabetic' measure-percentage='0.630653' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[avg:poultry:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[cnt:poultry:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:poultry:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466124103688:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125930509:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167996446:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172756003:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183901224:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[avg:pork:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:pork:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466124025863:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125881356:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167963677:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172727330:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183770151:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[avg:beef:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Calculation_906349466167762969:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:beef:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123608068:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125746185:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167635992:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167836698:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172239903:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466182426660:qk]&quot;</bucket>
            </map>
            <map to='#be6b0c'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[avg:lamb:qk]&quot;</bucket>
            </map>
            <map to='#be6b0c'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:lamb:qk]&quot;</bucket>
            </map>
            <map to='#d0d300'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:fish:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[avg:fish:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123862021:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125787146:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172629024:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183204902:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123898886:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125840395:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172706849:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183073829:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Lbs Produced (SlaughterCountsFull)' inline='true' name='federated.08sscf50dzp7lt18p5ymc08berb2' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SlaughterCountsFull' name='excel-direct.098dsza1hnxk9r1cbpv7x0bf1lg5'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Stewart/Documents/GitHub/probable-octo-palm-tree/Data/Production Info/SlaughterCountsFull.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Lbs Produced].[Month]' />
              <expression op='[Recalls_standardized].[Open Date]' />
            </expression>
          </clause>
          <relation connection='excel-direct.098dsza1hnxk9r1cbpv7x0bf1lg5' name='Lbs Produced' table='[&apos;Lbs Produced$&apos;]' type='table'>
            <columns gridOrigin='A1:K389:no:A1:K389:1' header='yes' lost='0' outcome='1' processed='1557'>
              <column datatype='date' date-parse-format='MMM-yyyy' name='Month' ordinal='0' />
              <column datatype='real' name='Beef' ordinal='1' />
              <column datatype='real' name='Pork' ordinal='2' />
              <column datatype='real' name='Chicken' ordinal='3' />
              <column datatype='real' name='Lamb' ordinal='4' />
              <column datatype='real' name='F6' ordinal='5' />
              <column datatype='real' name='F7' ordinal='6' />
              <column datatype='string' name='Beef Cattle' ordinal='7' />
              <column datatype='integer' name='910' ordinal='8' />
              <column datatype='real' name='0.615' ordinal='9' />
              <column datatype='real' name='559.65' ordinal='10' />
            </columns>
          </relation>
          <relation connection='excel-direct.098dsza1hnxk9r1cbpv7x0bf1lg5' name='Recalls_standardized' table='[Recalls_standardized$]' type='table'>
            <columns gridOrigin='A1:N941:no:A1:N941:1' lost='0' outcome='1' processed='8460'>
              <column datatype='string' name='Recall Number' ordinal='0' />
              <column datatype='date' name='Open Date' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='string' name='Class(R)' ordinal='3' />
              <column datatype='integer' name='Class(A)' ordinal='4' />
              <column datatype='integer' name='Pounds Recalled' ordinal='5' />
              <column datatype='string' name='Product' ordinal='6' />
              <column datatype='string' name='Problem Type' ordinal='7' />
              <column datatype='integer' name='pork' ordinal='8' />
              <column datatype='integer' name='poultry' ordinal='9' />
              <column datatype='integer' name='lamb' ordinal='10' />
              <column datatype='integer' name='beef' ordinal='11' />
              <column datatype='integer' name='fish' ordinal='12' />
              <column datatype='real' name='Column1' ordinal='13' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K389:no:A1:K389:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1557</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beef</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Beef]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>Beef</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pork</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pork]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>Pork</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Chicken</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Chicken]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>Chicken</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lamb</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lamb]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>Lamb</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F6</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F6]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>F6</remote-alias>
            <ordinal>5</ordinal>
            <hidden>true</hidden>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F7</remote-name>
            <remote-type>5</remote-type>
            <local-name>[F7]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>F7</remote-alias>
            <ordinal>6</ordinal>
            <hidden>true</hidden>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Beef Cattle</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Beef Cattle]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>Beef Cattle</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>910</remote-name>
            <remote-type>20</remote-type>
            <local-name>[910]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>910</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>0.615</remote-name>
            <remote-type>5</remote-type>
            <local-name>[0.615]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>0.615</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>559.65</remote-name>
            <remote-type>5</remote-type>
            <local-name>[559.65]</local-name>
            <parent-name>[Lbs Produced]</parent-name>
            <remote-alias>559.65</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recall Number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Recall Number]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Recall Number</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Open Date]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Open Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class(R)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Class(R)]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Class(R)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Class(A)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Class(A)]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Class(A)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pounds Recalled</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pounds Recalled]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Pounds Recalled</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Problem Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Problem Type]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Problem Type</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pork</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pork]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>pork</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>poultry</remote-name>
            <remote-type>20</remote-type>
            <local-name>[poultry]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>poultry</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lamb</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lamb]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>lamb</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beef</remote-name>
            <remote-type>20</remote-type>
            <local-name>[beef]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>beef</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fish</remote-name>
            <remote-type>20</remote-type>
            <local-name>[fish]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>fish</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Column1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Column1]</local-name>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias>Column1</remote-alias>
            <ordinal>24</ordinal>
            <hidden>true</hidden>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Recalls_standardized]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N941:no:A1:N941:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>8460</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133123092:qk]&quot;' value='Beef Recalled' />
          <alias key='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133143573:qk]&quot;' value='Lamb Recalled' />
          <alias key='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133168150:qk]&quot;' value='Pork Recalled' />
          <alias key='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133192727:qk]&quot;' value='Chicken Recalled' />
        </aliases>
      </column>
      <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
      <column caption='SUM([Fish])/SUM([Beef])' datatype='real' name='[Calculation_906349466132676626]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([fish])/SUM([Beef])' />
      </column>
      <column datatype='real' name='[Chicken]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Column1]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F6]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[F7]' role='measure' type='quantitative' />
      <column datatype='real' name='[Lamb]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' name='[Month]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
      <column caption='Year1' datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Beef1' datatype='integer' name='[beef]' role='measure' type='quantitative' />
      <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
      <column caption='Lamb1' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
      <column caption='Pork1' datatype='integer' name='[pork]' role='measure' type='quantitative' />
      <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
      <column-instance column='[Beef]' derivation='Sum' name='[diff:sum:Beef:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Beef]' derivation='Sum' name='[sum:Beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Chicken]' derivation='Sum' name='[sum:Chicken:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lamb]' derivation='Sum' name='[sum:Lamb:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pork]' derivation='Sum' name='[sum:Pork:qk]' pivot='key' type='quantitative' />
      <column-instance column='[beef]' derivation='Sum' name='[sum:beef:qk]' pivot='key' type='quantitative' />
      <column-instance column='[lamb]' derivation='Sum' name='[sum:lamb:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.580402' measure-ordering='alphabetic' measure-percentage='0.419598' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#020093'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Chicken:qk]&quot;</bucket>
            </map>
            <map to='#020093'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133192727:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Pork:qk]&quot;</bucket>
            </map>
            <map to='#45b130'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133168150:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[diff:sum:Beef:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Calculation_906349466108350465:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466132168718:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466108588035:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:lamb:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466132865043:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133143573:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Beef:qk]&quot;</bucket>
            </map>
            <map to='#be0000'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133123092:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Lamb:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466132570129:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:beef:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Calculation_906349466132389903:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466132463632:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Amount of Meat Produced in USA (lbs)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Lbs Produced (SlaughterCountsFull)' name='federated.08sscf50dzp7lt18p5ymc08berb2' />
          </datasources>
          <datasource-dependencies datasource='federated.08sscf50dzp7lt18p5ymc08berb2'>
            <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
            <column datatype='real' name='[Chicken]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lamb]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
            <column-instance column='[Beef]' derivation='Sum' name='[sum:Beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Chicken]' derivation='Sum' name='[sum:Chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lamb]' derivation='Sum' name='[sum:Lamb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pork]' derivation='Sum' name='[sum:Pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Beef:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Chicken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Pork:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Beef:qk]&quot;</bucket>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Chicken:qk]&quot;</bucket>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Pork:qk]&quot;</bucket>
              <bucket>&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Lamb:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Month:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Month:ok]' member='%null%' />
                <groupfilter function='member' level='[yr:Month:ok]' member='2018' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</column>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]' scope='rows' value='Amount of Meat produced (lbs)' />
            <format attr='subtitle' class='0' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' value='Meat Types' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]</rows>
        <cols>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Number of Pounds Recalled per Event, by Meat Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Number of Pounds Recalled by Meat Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FSIS Recall_standardized' name='federated.12uqawp1ah77qb1eehhzv0gh9zzn' />
          </datasources>
          <datasource-dependencies datasource='federated.12uqawp1ah77qb1eehhzv0gh9zzn'>
            <column caption='AVG([Pounds Recalled]*[Beef])' datatype='real' name='[Calculation_906349466172239903]' role='measure' type='quantitative' user:unnamed='Average Number of Pounds Recalled per Event, by Meat Type'>
              <calculation class='tableau' formula='AVG([Pounds Recalled]*[beef])' />
            </column>
            <column caption='AVG([Pounds Recalled]*[Fish])' datatype='real' name='[Calculation_906349466172629024]' role='measure' type='quantitative' user:unnamed='Average Number of Pounds Recalled per Event, by Meat Type'>
              <calculation class='tableau' formula='AVG([Pounds Recalled]*[fish])' />
            </column>
            <column caption='AVG([Pounds Recalled]*[Lamb])' datatype='real' name='[Calculation_906349466172706849]' role='measure' type='quantitative' user:unnamed='Average Number of Pounds Recalled per Event, by Meat Type'>
              <calculation class='tableau' formula='AVG([Pounds Recalled]*[lamb])' />
            </column>
            <column caption='AVG([Pounds Recalled]*[Pork])' datatype='real' name='[Calculation_906349466172727330]' role='measure' type='quantitative' user:unnamed='Average Number of Pounds Recalled per Event, by Meat Type'>
              <calculation class='tableau' formula='AVG([Pounds Recalled]*[pork])' />
            </column>
            <column caption='AVG([Pounds Recalled]*[Poultry])' datatype='real' name='[Calculation_906349466172756003]' role='measure' type='quantitative' user:unnamed='Average Number of Pounds Recalled per Event, by Meat Type'>
              <calculation class='tableau' formula='AVG([Pounds Recalled]*[poultry])' />
            </column>
            <column datatype='integer' name='[Pounds Recalled]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Beef' datatype='integer' name='[beef]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
            <column caption='Lamb' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Pork' datatype='integer' name='[pork]' role='measure' type='quantitative' />
            <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_906349466172239903]' derivation='User' name='[usr:Calculation_906349466172239903:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466172629024]' derivation='User' name='[usr:Calculation_906349466172629024:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466172706849]' derivation='User' name='[usr:Calculation_906349466172706849:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466172727330]' derivation='User' name='[usr:Calculation_906349466172727330:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466172756003]' derivation='User' name='[usr:Calculation_906349466172756003:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172239903:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172629024:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172706849:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172727330:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466172756003:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123862021:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123898886:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125787146:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466125840395:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='Pounds Recalled' />
            <format attr='subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' value='Meat Type'>
              <formatted-text>
                <run>Meat Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]</rows>
        <cols>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Average Number of Pounds Recalled per Event, by Meat Type '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Number of Pounds Recalled by Meat Type (Excluding 2008)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FSIS Recall_standardized' name='federated.12uqawp1ah77qb1eehhzv0gh9zzn' />
          </datasources>
          <datasource-dependencies datasource='federated.12uqawp1ah77qb1eehhzv0gh9zzn'>
            <column caption='Beef AVG' datatype='real' name='[Calculation_906349466182426660]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([beef]*[Pounds Recalled])/SUM([beef])' />
            </column>
            <column caption='Fish AVG' datatype='real' name='[Calculation_906349466183073829]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([fish]*[Pounds Recalled])/SUM([fish])' />
            </column>
            <column caption='Lamb AVG' datatype='real' name='[Calculation_906349466183204902]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([lamb]*[Pounds Recalled])/SUM([lamb])' />
            </column>
            <column caption='Pork AVG' datatype='real' name='[Calculation_906349466183770151]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([pork]*[Pounds Recalled])/SUM([pork])' />
            </column>
            <column caption='Poultry AVG' datatype='real' name='[Calculation_906349466183901224]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([poultry]*[Pounds Recalled])/SUM([poultry])' />
            </column>
            <column datatype='integer' name='[Pounds Recalled]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Beef' datatype='integer' name='[beef]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
            <column caption='Lamb' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Pork' datatype='integer' name='[pork]' role='measure' type='quantitative' />
            <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_906349466182426660]' derivation='User' name='[usr:Calculation_906349466182426660:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466183073829]' derivation='User' name='[usr:Calculation_906349466183073829:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466183204902]' derivation='User' name='[usr:Calculation_906349466183204902:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466183770151]' derivation='User' name='[usr:Calculation_906349466183770151:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466183901224]' derivation='User' name='[usr:Calculation_906349466183901224:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466182426660:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183073829:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183204902:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183770151:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183901224:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183073829:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466183204902:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]' included-values='in-range'>
            <min>2009</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</column>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' value='Meat Types'>
              <formatted-text>
                <run>Meat Types</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]</rows>
        <cols>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Meat production'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sumaries (Sumaries)' name='federated.0r9ji541dyg6iu19c8l271kigcz3' />
          </datasources>
          <datasource-dependencies datasource='federated.0r9ji541dyg6iu19c8l271kigcz3'>
            <column datatype='integer' name='[Totals (lb) Beef]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Totals (lb) Chicken]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Totals (lb) Lamb]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Totals (lb) Pork]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Totals (lb) Beef]' derivation='Sum' name='[sum:Totals (lb) Beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Totals (lb) Chicken]' derivation='Sum' name='[sum:Totals (lb) Chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Totals (lb) Lamb]' derivation='Sum' name='[sum:Totals (lb) Lamb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Totals (lb) Pork]' derivation='Sum' name='[sum:Totals (lb) Pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r9ji541dyg6iu19c8l271kigcz3].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Beef:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Pork:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Chicken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Lamb:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0r9ji541dyg6iu19c8l271kigcz3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Beef:qk]&quot;</bucket>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Pork:qk]&quot;</bucket>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Chicken:qk]&quot;</bucket>
              <bucket>&quot;[federated.0r9ji541dyg6iu19c8l271kigcz3].[sum:Totals (lb) Lamb:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0r9ji541dyg6iu19c8l271kigcz3].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0r9ji541dyg6iu19c8l271kigcz3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0r9ji541dyg6iu19c8l271kigcz3].[Multiple Values]</rows>
        <cols>[federated.0r9ji541dyg6iu19c8l271kigcz3].[tyr:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Pounds Recalled by Meat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Pounds Recalled by Meat Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FSIS Recall_standardized' name='federated.12uqawp1ah77qb1eehhzv0gh9zzn' />
          </datasources>
          <datasource-dependencies datasource='federated.12uqawp1ah77qb1eehhzv0gh9zzn'>
            <column caption='SUM([Pounds Recalled])*SUM([Poultry])' datatype='integer' name='[Calculation_906349466124103688]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='SUM([Pounds Recalled])*SUM([poultry])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Beef])' datatype='integer' name='[Calculation_906349466167836698]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[beef])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Fish])' datatype='integer' name='[Calculation_906349466167902235]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[fish])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Lamb])' datatype='integer' name='[Calculation_906349466167935004]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[lamb])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Pork])' datatype='integer' name='[Calculation_906349466167963677]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[pork])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Poultry])' datatype='integer' name='[Calculation_906349466167996446]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[poultry])' />
            </column>
            <column datatype='integer' name='[Pounds Recalled]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Beef' datatype='integer' name='[beef]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
            <column caption='Lamb' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Pork' datatype='integer' name='[pork]' role='measure' type='quantitative' />
            <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_906349466124103688]' derivation='User' name='[usr:Calculation_906349466124103688:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167836698]' derivation='User' name='[usr:Calculation_906349466167836698:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167902235]' derivation='User' name='[usr:Calculation_906349466167902235:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167935004]' derivation='User' name='[usr:Calculation_906349466167935004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167963677]' derivation='User' name='[usr:Calculation_906349466167963677:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167996446]' derivation='User' name='[usr:Calculation_906349466167996446:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167836698:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167963677:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167996446:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123862021:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123898886:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167836698:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167963677:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466124103688:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='Pounds Recalled' />
            <format attr='subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' value='Meat Type'>
              <formatted-text>
                <run>Meat Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]</rows>
        <cols>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Pounds Recalled by Meat (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Pounds Recalled by Meat Type (Excluding 2008)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FSIS Recall_standardized' name='federated.12uqawp1ah77qb1eehhzv0gh9zzn' />
          </datasources>
          <datasource-dependencies datasource='federated.12uqawp1ah77qb1eehhzv0gh9zzn'>
            <column caption='SUM([Pounds Recalled])*SUM([Poultry])' datatype='integer' name='[Calculation_906349466124103688]' role='measure' type='quantitative' user:unnamed='Sheet 6'>
              <calculation class='tableau' formula='SUM([Pounds Recalled])*SUM([poultry])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Beef])' datatype='integer' name='[Calculation_906349466167836698]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[beef])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Fish])' datatype='integer' name='[Calculation_906349466167902235]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[fish])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Lamb])' datatype='integer' name='[Calculation_906349466167935004]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[lamb])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Pork])' datatype='integer' name='[Calculation_906349466167963677]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[pork])' />
            </column>
            <column caption='SUM([Pounds Recalled]*[Poultry])' datatype='integer' name='[Calculation_906349466167996446]' role='measure' type='quantitative' user:unnamed='Number of Pounds Recalled by Meat'>
              <calculation class='tableau' formula='SUM([Pounds Recalled]*[poultry])' />
            </column>
            <column datatype='integer' name='[Pounds Recalled]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Beef' datatype='integer' name='[beef]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
            <column caption='Lamb' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Pork' datatype='integer' name='[pork]' role='measure' type='quantitative' />
            <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_906349466124103688]' derivation='User' name='[usr:Calculation_906349466124103688:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167836698]' derivation='User' name='[usr:Calculation_906349466167836698:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167902235]' derivation='User' name='[usr:Calculation_906349466167902235:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167935004]' derivation='User' name='[usr:Calculation_906349466167935004:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167963677]' derivation='User' name='[usr:Calculation_906349466167963677:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466167996446]' derivation='User' name='[usr:Calculation_906349466167996446:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167836698:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167963677:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167996446:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123862021:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466123898886:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;' />
                <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167836698:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167902235:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167935004:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466167963677:qk]&quot;</bucket>
              <bucket>&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[usr:Calculation_906349466124103688:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]' included-values='in-range'>
            <min>2009</min>
            <max>2017</max>
          </filter>
          <slices>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</column>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='Pounds Recalled' />
            <format attr='subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' value='Meat Type'>
              <formatted-text>
                <run>Meat Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]</rows>
        <cols>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Number of recalls by meat'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of Recalls by Meat Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FSIS Recall_standardized' name='federated.12uqawp1ah77qb1eehhzv0gh9zzn' />
          </datasources>
          <datasource-dependencies datasource='federated.12uqawp1ah77qb1eehhzv0gh9zzn'>
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column caption='Beef' datatype='integer' name='[beef]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='integer' name='[fish]' role='measure' type='quantitative' />
            <column caption='Lamb' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column caption='Pork' datatype='integer' name='[pork]' role='measure' type='quantitative' />
            <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
            <column-instance column='[beef]' derivation='Sum' name='[sum:beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fish]' derivation='Sum' name='[sum:fish:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lamb]' derivation='Sum' name='[sum:lamb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pork]' derivation='Sum' name='[sum:pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[poultry]' derivation='Sum' name='[sum:poultry:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:beef:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:fish:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:lamb:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:pork:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[sum:poultry:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='Number of Recalls' />
            <format attr='subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' value='Meat Types'>
              <formatted-text>
                <run>Meat Types</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[Multiple Values]</rows>
        <cols>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Percentage of Meat Recalled'>
      <table>
        <view>
          <datasources>
            <datasource caption='Lbs Produced (SlaughterCountsFull)' name='federated.08sscf50dzp7lt18p5ymc08berb2' />
          </datasources>
          <datasource-dependencies datasource='federated.08sscf50dzp7lt18p5ymc08berb2'>
            <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
            <column caption='SUM([Beef1])/SUM([Beef])*100' datatype='real' name='[Calculation_906349466133123092]' role='measure' type='quantitative' user:unnamed='Percentage of Meat Recalled'>
              <calculation class='tableau' formula='SUM([beef])/SUM([Beef])*100' />
            </column>
            <column caption='SUM([Lamb1])/SUM([Lamb])*100' datatype='real' name='[Calculation_906349466133143573]' role='measure' type='quantitative' user:unnamed='Percentage of Meat Recalled'>
              <calculation class='tableau' formula='SUM([lamb])/SUM([Lamb])*100' />
            </column>
            <column caption='SUM([Pork1])/SUM([Pork])*100' datatype='real' name='[Calculation_906349466133168150]' role='measure' type='quantitative' user:unnamed='Percentage of Meat Recalled'>
              <calculation class='tableau' formula='SUM([pork])/SUM([Pork])*100' />
            </column>
            <column caption='SUM([Poultry])/SUM([Chicken])*100' datatype='real' name='[Calculation_906349466133192727]' role='measure' type='quantitative' user:unnamed='Percentage of Meat Recalled'>
              <calculation class='tableau' formula='SUM([poultry])/SUM([Chicken])*100' />
            </column>
            <column datatype='real' name='[Chicken]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lamb]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
            <column caption='Beef1' datatype='integer' name='[beef]' role='measure' type='quantitative' />
            <column caption='Lamb1' datatype='integer' name='[lamb]' role='measure' type='quantitative' />
            <column caption='Pork1' datatype='integer' name='[pork]' role='measure' type='quantitative' />
            <column caption='Poultry' datatype='integer' name='[poultry]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_906349466133123092]' derivation='User' name='[usr:Calculation_906349466133123092:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466133143573]' derivation='User' name='[usr:Calculation_906349466133143573:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466133168150]' derivation='User' name='[usr:Calculation_906349466133168150:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466133192727]' derivation='User' name='[usr:Calculation_906349466133192727:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133123092:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133143573:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133168150:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133192727:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466133143573:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Month:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Month:ok]' member='%null%' />
                <groupfilter from='1986' function='range' level='[yr:Month:ok]' to='2007' />
                <groupfilter function='member' level='[yr:Month:ok]' member='2018' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</column>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]' scope='rows' value='Percent of Meat Recalled' />
            <format attr='subtitle' class='0' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' value='Meat Types'>
              <formatted-text>
                <run>Meat Types</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]</rows>
        <cols>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Pounds of Meat Produced'>
      <table>
        <view>
          <datasources>
            <datasource caption='Lbs Produced (SlaughterCountsFull)' name='federated.08sscf50dzp7lt18p5ymc08berb2' />
          </datasources>
          <datasource-dependencies datasource='federated.08sscf50dzp7lt18p5ymc08berb2'>
            <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
            <column datatype='real' name='[Chicken]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lamb]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
            <column-instance column='[Beef]' derivation='Sum' name='[sum:Beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Chicken]' derivation='Sum' name='[sum:Chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lamb]' derivation='Sum' name='[sum:Lamb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pork]' derivation='Sum' name='[sum:Pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Beef:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Chicken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Lamb:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Pork:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Month:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Month:ok]' member='%null%' />
                <groupfilter function='member' level='[yr:Month:ok]' member='2018' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</column>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]</rows>
        <cols>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Pounds of Meat Produced (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Lbs Produced (SlaughterCountsFull)' name='federated.08sscf50dzp7lt18p5ymc08berb2' />
          </datasources>
          <datasource-dependencies datasource='federated.08sscf50dzp7lt18p5ymc08berb2'>
            <column datatype='real' name='[Beef]' role='measure' type='quantitative' />
            <column caption='SUM([Beef]) + SUM([Chicken]) + SUM([Lamb]) + SUM([Pork])' datatype='real' name='[Calculation_906349466108588035]' role='measure' type='quantitative' user:unnamed='Pounds of Meat Produced (2)'>
              <calculation class='tableau' formula='SUM([Beef]) + SUM([Chicken]) + SUM([Lamb]) + SUM([Pork])' />
            </column>
            <column datatype='real' name='[Chicken]' role='measure' type='quantitative' />
            <column datatype='real' name='[Lamb]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Pork]' role='measure' type='quantitative' />
            <column-instance column='[Beef]' derivation='Sum' name='[sum:Beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Chicken]' derivation='Sum' name='[sum:Chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lamb]' derivation='Sum' name='[sum:Lamb:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pork]' derivation='Sum' name='[sum:Pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_906349466108588035]' derivation='User' name='[usr:Calculation_906349466108588035:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Year' name='[yr:Month:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Beef:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Chicken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Lamb:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[sum:Pork:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08sscf50dzp7lt18p5ymc08berb2].[usr:Calculation_906349466108588035:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Month:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Month:ok]' member='%null%' />
                <groupfilter function='member' level='[yr:Month:ok]' member='2018' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</column>
            <column>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' value='Meat Types'>
              <formatted-text>
                <run>Meat Types</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]</rows>
        <cols>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Produced by head'>
      <table>
        <view>
          <datasources>
            <datasource caption='SlaughterCounts-Full (SlaughterCountsFull) (2)' name='federated.1jl8qxh16vnp2u1e500mi10qmnd4' />
          </datasources>
          <datasource-dependencies datasource='federated.1jl8qxh16vnp2u1e500mi10qmnd4'>
            <column caption='Total Beef' datatype='real' name='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef]' role='measure' type='quantitative' />
            <column caption='Total Pork' datatype='real' name='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork]' role='measure' type='quantitative' />
            <column caption='Total Lamb &amp; Mutton' datatype='real' name='[Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton]' role='measure' type='quantitative' />
            <column caption='Year' datatype='date' name='[Livestock and poultry slaughter (1,000 head) Type 1/]' role='dimension' type='ordinal' />
            <column-instance column='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef]' derivation='Sum' name='[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork]' derivation='Sum' name='[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton]' derivation='Sum' name='[sum:Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Livestock and poultry slaughter (1,000 head) Type 1/]' derivation='Year' name='[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Beef:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Livestock and poultry slaughter (1,000 head) Total Lamb &amp; Mutton:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[sum:Livestock and poultry slaughter (1,000 head) Federally inspected 3/ Total Pork:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]' member='%null%' />
                <groupfilter from='1944' function='range' level='[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]' to='2006' />
                <groupfilter function='member' level='[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]' member='2018' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]</column>
            <column>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[Multiple Values]</rows>
        <cols>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='114'>
    <window class='worksheet' name='Meat production'>
      <cards>
        <edge name='left'>
          <strip size='257'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0r9ji541dyg6iu19c8l271kigcz3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0r9ji541dyg6iu19c8l271kigcz3].[:Measure Names]</field>
            <field>[federated.0r9ji541dyg6iu19c8l271kigcz3].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Produced by head'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2018</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[:Measure Names]</field>
            <field>[federated.1jl8qxh16vnp2u1e500mi10qmnd4].[yr:Livestock and poultry slaughter (1,000 head) Type 1/:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pounds of Meat Produced'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2018</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</field>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Pounds of Meat Produced (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='0' param='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2018</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</field>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Number of recalls by meat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Number of Pounds Recalled by Meat'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</field>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Calculation_906349466167762969:qk]</field>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Number of Pounds Recalled by Meat (2)'>
      <cards>
        <edge name='left'>
          <strip size='119'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</field>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Calculation_906349466167762969:qk]</field>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Number of Pounds Recalled per Event, by Meat Type'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</field>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Average Number of Pounds Recalled per Event, by Meat Type '>
      <cards>
        <edge name='left'>
          <strip size='185'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[:Measure Names]</field>
            <field>[federated.12uqawp1ah77qb1eehhzv0gh9zzn].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Percentage of Meat Recalled'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='268'>
            <card pane-specification-id='1' param='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.08sscf50dzp7lt18p5ymc08berb2].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</field>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Amount of Meat Produced in USA (lbs)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[:Measure Names]</field>
            <field>[federated.08sscf50dzp7lt18p5ymc08berb2].[yr:Month:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Amount of Meat Produced in USA (lbs)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Number of Pounds Recalled per Event, by Meat Type' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average Number of Pounds Recalled per Event, by Meat Type ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Meat production' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Pounds Recalled by Meat' width='192'>
      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
      WxkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Number of Pounds Recalled by Meat (2)' width='192'>
      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
      dGKa/w9AmVSMPoOBdwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Number of recalls by meat' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd3gdxdm379ObdNR7sWRZLpKLXHEB24AxNp0ESEL7CAkk1EDykpBASEiA
      gIGQ0EtCCZ0ANh0c2+BeZcmSVa3eezk6/ezufH/INu6WrIKx9r4uLqM9u/vMPDu/ndkpz2iE
      EAIVlRGK9rtOgIrKd4kqAJURzZALQJZlhruVJUnSsNoTQgy7TVmWURRlWG2ein4dlhpguAUw
      3AUDhj+PQgjVr4OA2gRSGdGoAlAZ0agCUBnRqAJQGdGoAlAZ0agCUBnRqAJQGdGoAlAZ0agC
      UBnRqAJQGdGoAlAZ0agCUBnRqAJQGdGoAlAZ0QxYAK6ORjauX0dNi4O2ujLWrt1AhzswGGlT
      URlyBiyA0vJqps2eR0KYiZpWF7NPm0TVnorBSJuKypCjH+gNXD3tbN+4DqM9CpvFjNEUjI4q
      FEX5TlaDQe9qKb/fP6w2FUUZ1rwqioJGo0GW5WGz+V34dajL0IAFEBcTR4+kw6do0Lg7yN6x
      BXN4GlqtFq1WiyzLaDQatNrh+9zw+/0YjcZhs7dv6Z7BYBg2m5IkodFo0Ol0w2bzu/CrRqMZ
      Ur8OWACp4yfR3d2DNTgEHQEcTh+hoSGDkTYVlSFnwALQ6gyEhYfv/UtHeJh5oLdUURk21G5Q
      lRGNKgCVEY0qAJURjSoAlRGNKgCVEY0qAJURjSoAlRGNKgCVEY0qAJURjSoAlRGNKgCVEY0q
      AJURjSoAlRGNKgCVEY0qAJURjSoAlRGNKgCVEc2AV4TJUgB/QEKnN6LXCnwBCbPJjEYzGMlT
      URlaBiyAipytNCoGkpLG4Gksod3lJTx5MpkpkYORPhWVIWXAAuh0OcEQRmiwiZ6uCE6flk5e
      Xj6KEq6GRRlie2pYlIEzYAFMmjUfvcbP9txiLBYjUsCNggmNRoNer0eWZbRaLZphbhMNZ4gS
      IQSyLKPXD9idfea7CDcDw+vX4bA54CfWVl9GRUMXo8ZNxuJrYuOmnWROn72/wB/673Ax3PZG
      is3htLcvLtBQ2tSIIa631cBYQ8NICYw11H5Vu0FVRjSqAFRGNKoAVEY0qgBURjSqAFRGNKoA
      VEY0qgBURjSqAFRGNKoAVEY0qgBURjSqAFRGNKoAVEY0qgBURjSqAFRGNKoAVEY0qgBURjSq
      AFRGNH0SgCRJuB1dePzDtwBbRWU46MOa4C4++2AdDmcFpph5XHHBzIN/FoKaknyM8WMxe5rI
      L21kyqxZ2E3Dt1RPReVE6UMNYEFyNZIwNouIMNthv/qcrdTUNNHjcVFR38mM6ePYU1w+BElV
      URl8jlkDONurWP7BStxC0FZQREpW7CFnCMrKakkeFY/L78dgsWG2hGHQ1KIoihoXaIjtqXGB
      Bs4xo0IocgCn082+EwwmC1bzgVEB/ORvz6G1pRF/ZBrxOhd6i5GAIZYpY+P3Z0CNCjH4qFEh
      Bodj1gDenhbWfLUB396/kyfMYs7k1APOMDJp5mnIfi+SxoBW9tDc4SQu7tCaQkXl5OSYr2Vr
      aAKX/OgyRkfbQBGIowQo0hnNmAw6DOYgEuNj0amBcVW+J/ShXdJF/q5qQu0hdLc6hj5FKirD
      SB8EEMKUOVPxOxvQ2SxDnyIVlWGkD+MAPVRWuvjBJUtY/mUNkD7kiVI5Oamu7iHgH8b2rUaQ
      nGz7roPjhhAf7uTNd9cw7awLhiwhKicvQgje/28Zd/xqPf5hnA0gBMyeE8sbby4mNNQ0JDb6
      FB1aq9GQOTULv8sFhA1JQlROXgoLO7jt1nX88qZMrrpq/LDZdTj8/OiKL/j93Zt45tmFaLWD
      X/v0QQAOiorqGKUJocPZw9TxiYOeCJWTl64uH9dft5ppwY38oL2A0YkPoLNah8W2EIJnn5vP
      1VetZv6CBH7yk7GDbqNPH8FTp6WyZ085mdOHT/0q3z1er8R9925G2rGBG2sep/OVF6j7xz+G
      NQ0Lz0zg9/fM4Fe3rSN7R8uA7yfLAo9HoqK8m7t/t+nYI8GSt5svP/2MbsXC1HEJ1LmDWDwn
      o58G1ZHgoWA4RoJf/lcB/73pcW4Qy8n67U1o4+Op++tfmb5pE5a0tCGzu499ftVodFxx+Zc0
      Nbr49PMLCQ839+s+kqRQWNjBurUNrFtXT2JiEOdfkMInH1ceWwAt5TnsajAwPqqD//6vgZ/f
      cBl2c/82lVEFMDQMtQByspv4x+I/cKXnQ8bd/WuSf/97/F4v+QsWEDJnDulPPYVmiJ/pgX5t
      aHCxeNEK5s6L47nnF6LTHd22ogh6evy4XBIFBe38+o71+PwKM2dGc+ZZiSxenExiYhAazXHm
      AnU2FPHfD9eiMci4vBqy5p3Dwhn96wZVBTA0DKUA2pscvH3+rUwsXcG4p58i9uqr0eh0+P1+
      ur/4gqJrrmH6li3YMvrXGugvh/p129ZmLrzgEx54cDY33DjxoHNlWaG4uJPNm5pYvbqWnJ2t
      nDE/nj/ffxoN9S4mZIQRFHR4mTimAA786UT3aVIFMDQMlQAUr5fsW3+L4z8vMemN14i67LL9
      b3q/348eyL/wQnRBQWS+//6Q7t91JL8+8UQuDz+0gy++uoi00SGsW9dATk4rP/t5Bj//2Rps
      Nj1Lloxi5sxo0tJCCAo+djk4pgA6aovYVd1EV5OGuWdMwGyzExLUv9FgVQBDw1AIINDZSekt
      t9C48humfvAuEQvOOOj3fX7t2bmT3LPPJuOtt4hYunTQ7B/KgX4VQtDZ6cNg0DL/jA+oqXZi
      tepJHxvK6afHcfMtk4iNPXy9yvE4ZoM+JCYZW1UpO8rr0Oi7SBg7lZkZo044QyonL5LDQfF1
      11H46UYi//Hvwwr/gQRPm0bERRdR/dBDhC5ciM4yNFNkAgGFsrIuvvm6kfXrG9iV28Y77y7h
      ppsm8ffHc5gwIZy33z0Xcz+/Sw/kmK9lndHGrDMu4Iyp8XR2dhNkt5+wIZWTF09lJbnnLGbT
      x7nkX/1PFt584XGvSbn3XtxFRbR/9tmgpcPvl6mvd/LxRxU0Nrq48idfccnFX/C//9Wy+Nxk
      ln90PhmZ4dz4i4m88+4S1q6t5+WXiwa2YEYclw7xzhufC9lZLd5ZvvH4px+CJElCluV+XzcQ
      fD7fsNrzd3SI7vx8oQxjPgOBgJAkacD3ce7eLbZNmyaeYIxYPPUF0dLiPuq5h/q1/J57xOax
      Y0XA4Thh+4qiiB3bm8UjD+8QZy74QKQkvyKWnvuRyM5uFntKO0Vnp+uo1z35ZK6IDH9RbNnc
      eML2+7BPsMK2b1bS6ZFJypxDRnJ4vwR2Kn8DCCHo+vprKv/yFySHA/u0aYTMnUvUZZehCw4e
      0g/EgX4DKH4/zW+8wZ7H/snrRTEUTvoRT792EVOnRh31mkP96m9pIf/SS7HPmkXaI4+gPY7P
      Hd0+tm1rpqCgA7dborbWyQ03ZpK9o4Xq6h5mzYph+owooqIsGAy6435bBQIy/3hiF6+/Xsxr
      /zmHrKzII/pcKApClkFRcBUU4CoowNfQgEar7ctG2QG6On2EhgUd+7SjcCoLoOW//6X0pptI
      /sMfiP3FL2h7+22qH3gAjdnMmGXLCDvnnCFrHw9EAJLDwZ477qBz1Srei/sp71Yns3rNpWRk
      HPvldiS/dm/cyK6lS5n08ceELVx48G/dPiorHWzZ3MTsObEse2QndbVO5syJ5exFicydF09Q
      0NE7Do4ngH3c9X8beOftPazb8ENSU+0IIfBWV+MpLcW5ezfO7GzQaBj1hz9QfMMNmJOSsIwZ
      g33mzL40gbziqxUfiVaHW/j8gcN+ba4pFes3bBbtTp9wdTaKzVuyhfeAlsCp2ARSJEm0fPih
      WBcRIaqXLROy3y/8fr9QFEV4GxtF2e9+J74xm0Xu4sXCWVQ0JGk40SZQoLtb5P/gB2JDXJx4
      //53RFjIC+K9d0uFoijHvfZIflUCAVFw5ZUiZ9Gi/cfeeadU/Pxnq8T4sa+LqVPeEtdc/ZXI
      z28TLc1u4fP1Pc2Kogi/33/Mc2S/XzTnlYqrk+8Uz83+qSi4+mrh2rNH5J57rtg+Y4YoveMO
      Uffss6Jr82ahyLKQD8lDH2oAN6uWf0mnJJM0fiazJ6Uc9Kujuwuj1ktuSQdG4SY9PYHiajcz
      p/QOlZ9qNYCQZZpef53yu+5i9EMPEffznwMc9KYSQuAuLqbinnvoXLmSuBtuIOnOOzEnJw9a
      Ok6kBvBUVVFyww34m5vR//VFfvTrUi67fAwP/W1On5prh/pVUQQtzW62f57Lf297ksLUpfz1
      sYXs2dNNwK9w7rnJTMgIR6s9sXEkcUANILtcSA4HnrIyXEVFuAsKSL77bgqvvBJvdTWWtDQ+
      zDGgnzCZu967E3N0JL1DvZpj2u5D/5EJReomPnki0hHmghuFh83bC0hIm4jfoycoJBaTNu+U
      DIsiZJm2Dz6g8q67SPrjH4m89loCgQBweFgUQ1oa4956i7YPP6TuwQdpff99kv78Z6Iuuwzt
      IDSL+hsWxVtVRfGPfoTWZGL02+9x7W9KSEy08bu7s/bn4XjIskx3t5s9e7qJjrbwr5eKeOft
      PURHW8mcOoOfNrzN1LGLOfvsCQdcE6C/kVsUnw9fdTWu4mJ8NTXE/OQnFF50EbLTicZgwDZp
      EtaJE1EMBtJeeAG93Y4+PJzqz2v46XVryNrWw5KlfZy2f/yKqFO88s8nxUcffCTe+3jLYb+2
      NNaL9tYGsWnrTrFz21bRUFcmsndX7f/9VGkCKYGAaHz9dbE+KkrUP/+8UA5ofhyrqlYURQS6
      u0XNE0+I9TExYvuMGaJj1SqhBA5vTvaH/jSBHNu3iy3jxoldF14oXNU14t57Nosxo18ThQXt
      x7xOURShKIpobHSK1/9TJH7+s/+J9DH/EZkZb4iPP6oQZWVdoqKiW3g8AeFrahLrIyNF7VNP
      9ak5pciykFwu4WtuFt1btojWjz4S3sZGkXvuuWJTSorYnJ4udi5cKEruuEP4OztFT26u8Hd0
      CMnlOmpvmyTJ4u7fbRRJCS+LysruPvmmDwIQonjHavHSv14Xte2Hd0m11JaL3Nx80eXyCY+j
      TeTtLhH+U+wbQJEk0fjaa2J9dLSofeqpw3/vQ1tVCCHcZWWi5JZbxNqQEFFw1VWiJy/vhNPU
      FwEosiw6164V66Ojxe4rrhABh0N88H6ZCAl+Xnz2WeWRr1EU0dTkEitXVovf371RfLSiXDzx
      9xxxycWfir89tE1s3dIovN7D7SqKIqoffVRsTEgQ/o6Ow34LdHYK5+7domvDBuGtqxMF11wj
      tk2bJjalport06eLwp/+VAS6u0XH6tXCWVgoZK+3z349EKfTLxadvVyct+Qj4XQe/9o+CMAl
      /vPsM+L9t14Wn20q6VdihPj+C0CRJFH71FNiXViYqH366YPe/PvP6ceDUmRZdG/ZInbOny/W
      R0aK8j/8QQS6uvqdruMJQFEU0fz++2JDQoLYc+edQnI6RXl5lxid8qr47V0bDjrP55OEJMni
      ww/KxEUXfCJGp7wqZs96T9x5xzqRk9MivN7e34/nV39Hh9iamSn2/OY3wlNdLTw1NaLklltE
      ztlni02pqWJzerrIv+wy4WtqEk1vvim6t24V3vp6IbmPPPZwIgIQQojy8i6REPdv8fDDO45b
      Gx1TAD53p8jdsVE8/+zLYse2VeLdFYc3gY7H91kAiiSJmieeEGvtdlH3zDNHP+8EHpQSCIiW
      5cvFlowMsSE+XjT8+99C6unp8/XHEoAiy6Lh1VfF2qAgUXHffUKRZeFw+MSis5eL85d+LBwO
      nygq6hCvvFwgfv6zVSJj/Ovi6ad2iS+/qBLvvF0qamqOPLB1oF8VRRH+tjbhbWgQnupqUfXQ
      QyL/ssvExuRksQZE3kUXCU9lpah66CHR+sknwlVaesSXxzF9dIICEEKIL76oEqfNfFd0dXmP
      ed4xe4EC3h4qymuorSql1eElddJcZk/s31yg72svkJBlGl58kfLf/57Rf/kLCbfcguYoPS5i
      AJPhAu3t1D/zDHVPP4113DhGP/ggofPnH/e6o/UCCUmi5tFHqVm2jLRHHiH2uutAb+BP923l
      sUd38vIrZ9PR4eORR7KZPj2aM+bHs2BBAuljQrCHHHvhuaO0lJ41a3AXF+PMzcVbW0voggUk
      3XknjS+/jC0zE9vEiey57TaCJk9m3IsvHtVnfWEgfpVlhf/7zUbc7gDPPLsQvf4o5e/4WuoQ
      /3ryX2LLli2itKa530r8PtYAiiSJmr//vffN/+yzx53iMJA31b7rvbW1Iv/yy8Xa4GBRcM01
      wlNZecxrjlQDyB6P2HPXXeIbe4ioe/1NUV7eJR59NFuct/QjEWx7Tsye9Z547dVC0driFg6H
      T8jywc0D2e8Xss8n/K2tomX5clFx//1i9xVXiG1ZWaL0zjtF0xdfiMJrrxVVf/ubaP34Y+Gp
      rhby3vGPA5saHWvWiLUhIaJ7+/YT9sk+vwzErzt3toiw0BfE88/lH5Q+r+QRhR154pXCp/sy
      DuDllaefJywxhYT0qczMPLVrACHL1P3zn1Q98ACpf/kLCTfffNyVT2KQpkMLSaJr7Voq778f
      d3ExibfeSuLtt6MPDT3s3ENrgEBXN1t+v4wvX1pDQfyZzL3lh8TGWvn3vwvZtLGJ3/5uGvf/
      5bSD3oRSVxeuwkJcRUX0bN+Ou7SU8MWLMcXH0/jqqwRNnkzQ1KlY09Mxp6aiiYjok1+VQIDC
      q65C7u5m8mefodGf2GzNwfDrk//cxUMP7eD1D+aiS6mkw9tGVtQsHsv5E1MiZ/RlKoSLD95e
      yZwFp2EOCiXc3r+IAN8nAQhJovaJJ6h++GHSHn6YuOuv71MVPlgC2IfsdtP4yivUPv44OpuN
      0Q8+SPiSJQfNtfH5AnR1+dFqtKxbW8djf91AY003mXNGc/aiJC68KJWICDMXX/gpEUGCl/+e
      hagtx5mbS8/27URfcQXe6mqa334by+jRBE2din3WLGyTJmGIjARAe0h++uNXZ14eOWeeyfh/
      /YuoSy89IT+cqF+FEMhCwid7WVH6Pi//7zN0kR2kxyazdMz5nDfqB/hkH2adpS8C8LL16004
      JJnYlEwmpcf3KzHfFwEIWe4t/H/7G6MfeICEm27q+7VDtCDG39pK3RNPUPfMM9hnzybu/oep
      0cWzbl0DmzY2kJfXzhVnmJhT+T6NLhNLX/oTkWFGvHV1eMrKKP1sA09sieK3S/zoNnyOKS4O
      y/jxBE2eTNjChZhHj0aj1/d5lLa/fi2+8UZc+flk/e9/6IL6P5esv34NKH6qHGXkte9kc9M3
      XJz6Y7a3bCQrfDb33VhLUmgir752DqYDdi/q01SI1Su+orW7BVPqGVw6/9SLCiFkmbonn6Tq
      gQcY/cADxN9wQ7+q7aEQgBACIeiNhPCPT2l/5SU0fh/PSRdy1pLRnHn+WKbE+en59XUESgrJ
      Wr2alvffp/2zz9CHhlLgCGNHewS3vHsX6bPHAaAPDj7h5gj036/eujp2TJvGmMceI/baa/tt
      71h+3VdsA4ofgeCTyvf4suYj/IqPyRHTOS1mPlMip2M39jYfd2a3cObC5Tz62Dxu/MW364n7
      NBu0uqwKr6+VXWVarrh4dr8ycbILQMgytX//OzWPPtpb+G+8sd/2BksAsixwuwO0tXl56sld
      bN3aTF1FO5NTdCyZbmBBx1c4NqxH6ulBazYTaG4mePp0Qs44g/gbbkBvt6MLDmZXmY9LLvqM
      2381hbt+O21AadpHQPHT6mwm0haDUdd3EdQ8+ih1Tz7JaUVF/a4FjuRXn+ylxdNEXls2m5u+
      ocZZyfUTbiPCHIVJZybNPhad9sgif+3VIu741Xo+++JC5s6NA/oogD27i3HLgpjkNGKPsE/Y
      sTiZBSBkmbqnn6b6wQcZ+8wzRP3whycU6mMgApBlhYLdHXz5ZTVbNtYzJsTNBZlePi0PZ8z2
      N4htziPKJqEzm7FNmkTirbfizM+n9u9/J3j6dMa/9NJBBaury8e553xEYlIQb79zLkbjwNcM
      uyUX/y78J+sbVjPKPpoLRl3OrJjTseiP/z0YaG8ne84c4q6/nlF3390vu/v8qtFpKOjIJdQU
      xvqG1ayq+5TR9nRmxZxBZlgWsdZ4DH0QpSQp3HbrWjasb2T115cQHW09tgD27xGmyLQ31hA+
      6Xx+ednp/crEySqAfW3+mmXLGPfCC0RecskAIl/0TvwzGo8vgIBforG6E9HTTWVOJb96pIYz
      6lYwzldCktVFeISFoKQ4Ml5/HXdpKYaICCzjxqHV69EYjWi0WoQQBNxudAYDugPyKUkKt9+2
      jg3rG1i56uITWiR+IEIIqnrKWLbzj/gVH1eP+QXZ7ZvJad2KLGTOG/UDzkxcSpw1Ab326Hmv
      f+45qh54gGkbN2JJSemT7S5fB7vadvBN3VeU95Rg1Vv5SfrPmRw5HYvOilFnQqvpf5nq7vZx
      1sLlpI6289bb5x4nLIoiU1NWQEFJJeaweGZMz8Ju6d9b7mQUgJBl6p95hqq//rX3zX/55X0u
      /IGAQnOTi5oaJ6WlnRQWdlJS0okkKcydG8fceXFkZUURFtY7qCS73Tgqasiv12FZ9Tbtm3fQ
      klNIlMFF5LgUjH99jrCyrVgSYrGkpWFJS+vTIppDu0EVRfDaa0Xc9ZuNfLjiPObPT+hTfo6G
      rMh8Xv0Bb5S+yMTwqdw86bcEa0N6o0L4u1lZ+wmbm76hpKuAGVFzODNxKTOjT8eiPzztitdL
      9ty5hJ15JmmPPXZEX3skNzU9lexs3UKUJRaHv5PtLRuZGXU606Jnkxg0Cv1Rmjb9JWdnK4vP
      WcH9fznteGFRclj22FvEjknFatKTlrWAs2eN65exk00AQpapffxxah59lHHPP0/kpZce1uyR
      ZQW/X8HtDlBV2cOuXW0UFXVQXNRJWVk33d0+fD4Fu93AqBQ7U6dEIAf8ZG9tpKKsiyXW3Zyf
      4WWMqY2u3UX0SAaei/81j8yvJGxMMsFTpmAeM6a3zX6CgWYPFUBubisXnv/pgNv9Qgg6fe28
      WvwM25o3cPmYazk/5XLMOvNhfg0ofoo68lhT/wXrG1YTZgrnvFE/ZEHCYsJMEQe9ods+/ZSC
      H/+YGdu2YcvIQFYkBILy7hI+r/6Q/I4cdBotE8ImsyT5EtJDM9AAQmbQe9eEELz2ajF3/d+G
      vnwDDIyTSQBClqlZtoyaxx8n47XXiDj/fDweiZYWN3W1TiorHeTmtlFa2kV5WTeVlQ6sVj0J
      CTYSEoOYMiWStLQQxiSbGJUcRHBFNs5du3Du2oW3uhpXezdPjrqXiVtexJCUQldIMpsrjZT7
      I8jMimP+gnjmnR7PhAlhJCSc2BLTfRwogPZ2D4vOXsHEiRH8++WzT7jdrwiFPV1FPJrzR3Qa
      PbdP+QOZ4Vn7fz/Wi6Xd28onVe+xpWkdDa5azkxYwlmJ5zEubCJmnRnF52Pnj39AZ6IV152X
      srV5PZnhWUyOmE5RZz5ZkbMYG5pxUO0wVN3L+7jt1rUjRwBCUah97DEK//hX8s+/j5bU2RQW
      dlJZ6aCj04ej20dcnI3MiRFkZISRmRnB2LGhRNo1BPU0oBTtwpWfT092NlqzmYRHnuCD0y6h
      2BdNGYnYp2bxp38s5dPtMueck0RScjBWq57mZg9lZV2sXlXLhg2NbNvaTHi4iYyMcObMjWPh
      mQnMnh2LxdK/6n2fAEDDbbeuY+039axacwlxcSfW7pcUiQ8r3uDdPa8wO3YBP5twO+HmyOP6
      9VA8kpttzRtY37iKLU3rGBMyjgUJ5xJjieOlLQ/gamlkfMxUFky/kqyoWUSYj74If6gF0Nbm
      OTUF0NTUQ2mJg+rqHnbsaKGirJMpRe8xr/5jng25karoaSQnB5M1NYoJGWGMHxfG+FQzmvYm
      fDU1uAoLcWzZgs5qJeHWWym45lqkiHjqrak4ItOYcc25/PDGHKKizCxenMyChQnMnBWF3W4+
      6rfEPjf7/QrffFPP5k2NrF5VS0WFg+5uH1OmRHL2oiTmzotj4sQIoqIsBw3YHMo+Abz4QiF/
      /OMWvvjyImbOjDkhf7V5Wni+4DHy23dy/YTbWJx00RHz0RcB+GQfTa46SrsLWV7xNo2uWix6
      K12+TtJDx7PkH5XEtGrIWrkSrfnYUZ6HWgDQp27QgTHcAggEFM49ZwXZ2a0kJQWRnmpj/LZX
      WRJYx6hnX4I5i4i2SQQq9uAuLMRTVobObid4xgxKbrwRS2oqlvR0rBMmoM2YyoaWKL74vIrs
      XZ1IAYUlS0fxyLK5NDS4SE4ORqvVDGjIvr7eRWlJJytX1rJjRwvbtjZjteoZOy6UmTOjWbgw
      kenTo4g/pMkkSRK7d3dw5oIV/PG+mdz566wT6sXKb9/JU3kPYdSZuH3yPYwNPfpA59EE4JZc
      lHeXICkBBPBU3t9ItY9hetRsJkVMx24MYUPjGjY0rqImZx1X/66UpKf/zugrr8dmOHpTUBXA
      CdLY6MBs1KOXfTQ+eD/1Tz9F6BlnEHfDDehDQym96SZ0dju2CRN6J3xlZWFftJiu5m4Ky9x8
      +b966utdPPzIXG69eS3zF8SzZMkokpKDsdkOnzowWA8qEFDo6fGTl9fGN1/Xs359A4UFHSiK
      IHlUMIsWJTFnbiyzZsXgdge4+MLPOG12LM88u/CYtcWR8Mk+vqj+kNdKnmN+3CJuzPz1MQsj
      fCsAIRScASc7W7ewo2UTee07sBtDmR0znx+kXY1AYNZZDuumlBSJ0s7dtP3lMVqXf8hXTy9k
      Ztpilo66lHhbIlrNIVO7VQH0DaEoSJ2deCorcRcXQ0gImp4eqh58EF91NUHTp2MdN47ICy4g
      dP58Ah0dmJOT8Qagrs6J0ajltlvWUlbWTXi4mXmnx3HuklHMmxfXp4I1lA+qtdVDfn47mzc3
      snpVHSXFnXg8EuHhZqw2PevW/7DfG8h1+Tr5564HyGvP5qaJd3FW4pLDCt+heBzLVAoAABqR
      SURBVCUPxe27KXcW0+5t5ZykC3ml6Gkmhk9lWvRsUu3p6I5zj334m5rYPnMGtVdPZ/N5IVQ6
      ypgVczrnJF1IVuRMTLreptH3QgA97fXsKqwiffI0rFIHeSUNTJ01A6u+9y05WAIQQoCiICQJ
      qbMTd2kpxthYujdsoO7JJ5EcDrRmM+ZRowi//HI82dk0vvoqme+8Q/jixWhNJhRFUFfnZOOG
      Rr76sprtO1qIiDCz4qPz+XpNHTNmxhATbcHczw/S4XhQ0FtDdHR4KSjooKK8izPPSiQt7fCp
      0kdDEQp57dk8m78Mo87I7ZPvIT1kwhGbTopQkBSJTl8b/y37D7lt2xFCYVLkdGZGz2V2zAIA
      dNoT63Gqe/JJah5/nIkbvqbE2Mg3DV+xvmEV8bYkzk48n7MSlxJmikCW5JNbAC1NjYSG2cgv
      qEGj+Bg/LonCCgczpowBTlwASiBAoLUVX319b0HftInm//wHV0kJyDKmhATif/lLQmbPxltb
      S9DkyRgiIhCyTNlvf0vTK68w9t+voMxeRN6uNrKzW/nJlWO5+KJPSUoMYsnSUZx1ViLpY0MH
      PF1guARwIP2NC+SR3Hxc+S7vl7/OvLgzuX7Cbfsniu3DL/uoc1aT37GTXW07aPe28Ptpf2N9
      42oywieTZhuH2TQ4ke5kl4udp59O6MKFpD/xBAD1zho2N33DFzUr6PZ3MD1qLosSzic1JJ0I
      c9SQhJocsAAkv4s9pZXEJCbT0NRE5rh08nfnMTFzUp/jAglZJtDWhtZspuPzz3GsW4c7P59A
      aysao5GUBx9EFxqKv64O6+TJGGNieuesH+nN5fFQeOPNvN85kWxlPJVVPYSFmbno4hRuujkT
      j0ciKmrwwxUqijKs3zn74gL1pVB0eFt5quBhSrt38/PxdzA/bvH+5opP9lLvqsFuDOXBnN/i
      DPSQGZ5FRugUJoVNI9aWgIZva/PB3I+g7b//pezWW8nasgVzaur+486Ag5KuAlbWf8yOlk0E
      GYOJtyYzOXw640MnkRmehVE7OIHPBiyAvG2bCEkcjd1mpXpPEaHhdjq9QUzNSAIOrgEUrxep
      pwe93U7HV1/RtW4drsJCvFVVyE4n4156CdnhINDRgXXsWGyZmejDwtDodEedpOb1SNQ3uMjO
      buGTjyop3dPFm2+exTPPFDJ1WjRLzk0mPMKMTte3wnIinKw1gKxIbG3ewHO7lxFrTeD2KfeQ
      YEui0VXPrvbt5LRuo7hzNwlBydwz/WEaXHWk2NMwak0n3A3aH2SPh7ylSzGPHs34f/3rsGes
      CIUudye1nkp2tGyioCOXBlctHsnNqODRzIw5nQlhk0i1pxNiDD3mfKRDEYqCZ8+egQugqaac
      TpcfW1g0McE6ahq7SB2dwr6Vd7Is0/TKK3SvXYu7pAS5p4dxL7xA9+bNyA4HwdOmYU5LwxgT
      gykurk82HQ4/W7c2MWlSBD/9f6uoqHCQlhbConOSWLAggQkZIVitQ7Oz+JE4GQUQUAK8UfIC
      yyveZEnypUyNmkWVo5zzRv2Ae7feTqw1gazIGWSGZ5EYlNKneTZDEXKya8MG8i+8kCkrV/YG
      qz2AQ/2qCJlObzu1ziryO3Io6MiltKsAvcZAUnAKmeFZTI2cRUrwGMLMEUe0J4TAU1pK/XPP
      0fzmm8PTC1Rx111YUlMJmjIF64QJ6ENCjhtK+0CEEOTktLJ+XQMrV9ZQVNhJfLyN995fQn2d
      i/SxodhsBgyGb/eyGqlbJAkhaHY38MSuv5DTto0YSzwGrQG9Vs+M6Ln8OP16dBo9Fr2137Mp
      h8KvQlEo+PGPkbq6mPL55wct2DmeX2VFxiU5qeopI69tBzmt26hxVgKCOGsiM6LnMSd2AfG2
      JMwaE76KSuqffZbmt97CGBtLyj33nJzdoD6fTFWVg+wdLWze3MQ9987gqitXkppq5+yzk5h1
      WgwpKXZ0uiM3aUaiAAKyn8qePexs3crHle8Rb0si0hzNuLBMMsImMzpkHIZ+NBGOxFD5tWfn
      TnLOOovMt94i4rzz9h8/Eb86Az2UdO6msHMX2S1bKO8qZnSrhQu+NmH8ZBNdsWYm/O5PpP34
      enSWPq0JHhjHE8C+pX9er4QQ8M9/7mL5B+V0dvlIHxPK+RemcO214zEatH3unjzVBSCEQJIl
      JBEAjYY3Sp5nW8sGmtwNyIrEZWOu5Yq0/4fVEHRCc+aPxlD5VcgypTffjHPXLrK+/nr/dPCB
      +FUIgauxlh2/uxnPiq+wJ6ay/cdJrMtwYAuNIjl4NNOiZn93AnA4/BQXd7JpYyOffVpFZZWD
      1Wsu4dNPqhiTHsKCBQknvPnZqSqAgBKgwVVLfvtONjd+Q72rhvtmPsampm9YUfk2Jp2Zmybe
      xelxZw2J/aH0q6+pie2TJjH6wQf3L0s9Ub9K3d20vPcetU88gd5uJ/H224m6/HK0BgNtnmYK
      O/PY3Z5Dbtv24ROAENDU5GbjxkbOOSeJq65cSU11D7Nnx7JocRLTp0UzOs1+zB3A+8qpJICA
      EqCgPYdUezqP5/6Zqp4yxodOYnrUXDLCJlPRU8JLhf8g1prIbZN/z6jg0YOehn0MtV+rH3qI
      hpdfZsa2bRjCw/vtV9ntpuWdd6h78km81dUk/+53JN52GzrbkWfI+mX/8Ajg0WU5fPRRJS3N
      bsaODeW5F87EaNQRHm7CZNINevfkcAtAURRcfic6/eD0kTsDPeS1ZbOhcRUlnQUYdEb+L+vP
      WA1BRJqjMWiNeANe3i17hf/Vfcwlo6/kJ+k/69di9RNhqP0aaG9n5+mnE33FFaTef3+fBSB1
      ddG6fDk1y5YhdXcTe911JN52G8bY2OOWrWERwLJHcpg2LYoZM6OJiBiaPbMOZDgF0OSq592y
      VyjqyEdBGYQ7Ctq8rTgDDgAMWiPRllgMhwz8eGUPWrTcPOm3zIieO6ht/aMxHH5teOklKu+7
      jxnbt2NMSDimACSnk9YPPqD2scfwt7QQf8MNxP/yl5gTE/ts7zv/CB4KhvpBCSFwSy5W1n7M
      h+VvEmy0syTpUiyGvi1vlJXeHpzctu2sb1iFQCHcFMnM6HmMD5vcpxrRgIHJkdMJt0Qe99zB
      YjgEoPj97Jw7F/usWaQ//TSSfPBcICEEstNJy7vvUvv448huNwk330zs1VdjjI/vd2tCFUA/
      kRWZnLatvFTwBN3+Ln4y9mecm3QxOqE/ZlXtlTzUu2rIb9/JxsY1XDbmWlrcjbglF9Oj5zAm
      ZHy/0jHQbVJPhOGqWTtWrqTgRz9iysqVWLKy9vtV6uqi5b33qHn8cRSfj4Sbbybupz/FGHX0
      VWXHQxVAP6juKeeVomfY1baDc5Iu4LK0a4i2xh21reqTvWjQ8L/aT1lR+TaSEiA9ZALz4s5i
      WtRpBBtDTjgtp7IAFL+f/EsvBY2GjOXL0QlBwwsvUP/ssyheL4m33070FVdgShhY5AtQBXBc
      hBC0eZv5vPpDPqp8h7GhmdyQcQdpIeMOOkeSJBStTLO7kcKOXWxq+pqy7mKuGfdLUoLTUFAO
      WmA+UE5lAQB0b9nCriVLiLnuOjo++git2Uz8TTcRf/31JxRn9GioAjgGsiLxefWHvFv2Kmad
      mZ9l3M7M6HkHTbrySG7Kuooxac3s7szhk6r3SLGPYUbUXKZEziDeljQkH6inugAAKu69l9YP
      PyT+xhuJueqqATV1joYqgCMgKRI7Wjbxzp5/0+5t4+LUH7F01KXYDMFAbwiQgo5cNjV+Q0FH
      LiHGUM5L/gFnJCxCrzVg0pmHvFdmJAhAyDI+pxOT3T5kM3lVARyAEII6ZzVvlr7IluZ1zI09
      k+vG30Kw0U6lYw/57TkE7RXBhsbVzIieS1bkTEYFpyFkcVJMhhtKTqUBxn2oAqDX0T7Zyxul
      L/JF9XKSglP4ZeZvMGiNfFG9nJ1tW9Fr9EwIm8zZiUuZED4FrUa7f1HJyTAZbjhQBXACnOwC
      8Eoe1jeu4q3Sf9HgqmVsaAZBBjuJQaNYlHg+O1u3MjWqN2rZ0RaOqwIYGobDr4MTbfR7iBCC
      Ckcp/y58kp1tW1GETLgpklHBaUyKmMbUyFlEW+MYFzbx+DdT+d4yogQQkP00uuvIb9/Jztat
      bGvZwMTwqTx1xut4ZQ/jQyei1xqG7INL5eTjlBeAV/JQ0lWAW3Jh0wdx37Y78EhuMsOncO+M
      ZcyImnPUHUVUTn0G/OTrywupaHRz2rxp1ORvp7Kpk9RJcxkTZx+M9PUbIQQe2c2GutXktm1j
      d3sOWo0Os96CM+DAqrdy88T/Y37CuZh1x45NqXLqM2ABJKRl4PUXgSLh0tlZdM4M8nYVIGIn
      oSgKitI7Q3Lfv0OBX/FT5dxDbtt2On3tnJfwQ1bVfMa0qNNIDU5nW8t6SjoLuGDU5VyQcjnh
      pkgQvR+Sg4EQAkVRBu1+fWFfWJQh7sM4zOZw5hG+7UQZKga17heKQAgFQW+Pz76Ea7XaQcuE
      QPQWOCHT5evkvbJXyWvPxqd4yYqcxayYeURZYrkj615WVLzNl7UrmBA2mYfnPk9a8LghcWbv
      sk4xrD1dQohh710bbnvDkccBC6CiMJvCPXV0CBMxBh9r1nzDuKmn7w/aNFiZ8Mt+6l3V5LZt
      J7tlMy2eJh6c/TRJ9hQWJZ9PWsh4DFoDilD4oupD/lP6PDZDEPfOeIQpkTP7HLfyRNhXA3wX
      gbFOdQFotdohtXlSjwP4ZT/VPWXEWBP4/eab6fJ3MDliOjOj5zE2NOOI82wCSoDHdv6J8eET
      OTvxvMPC/w0F6jjA0DDiBsIUodDqaSavPZtNjV9T1VNGmCmCP854lA5fG7HWBKx6K5rjzLPx
      +ryYjEeObjYUqAIYGkaEAAKyn5KuAna17+DClCt4YMddWPQ2ZkbPIzN8ColBKf2OZ3MqPqhD
      UQUwOAxrB3jvx6uCgsK25vVsaFxDcWc+Go2WaZGnAfCnmY9j1llPOOy2ikp/GBYBeGUPDT21
      7G7PIad1Kzdm/pptzRsYEzKOK8b8P5KDUtXBKJXvhGFpAv1m089o87YwKWIac2IXMCv69BPe
      6bsvnIpV9aGoTaDBYVgEUOOsJDVkzFCaOYhT8UEdiiqAwWFYOnWHMlqZispAGL5RDRWVkxBV
      ACojGlUAKiMaVQAqIxpVACojGlUAKiMaVQAqIxpVACojGlUAKiMaVQAqIxp1CmYfEYqMEvCi
      BHxI3m6UgI+AuxPJ043k7iLgdWIOicYYHI3WaEVnCkJnMKM1WtGbg9Go07uPiFBkZL8HJeBG
      9rl6/evuIuBqx+9sRw74MIfEYLRHozPb0RrM6IzW3v9MtgH7dVAF4O5qZveeJqZMn4Lpe1K3
      KHIAydNNwNlOwNmO5OnG72je+3cb/p4WJE83PkczSsDT+4A83SiSDyFLaI0WDLYItDoDvq4G
      ZF8PGq0enTmo92EZrOgsdvSmIIwhcRisIRiCIjGFJqC32DEERaI3B2MIjkKj1SMkP4ocAMBo
      j0EJeJE83QelWWswgd6Mv7P2oNVxOpMNU2g8zvp8hCx/e77eiC1uAs763QhFBgSyzwVA6Jh5
      9NTlIXt7DrIRPGoanpZyfF31+49JskxIYm+kPFdjEUrAu/d+YI4YhSUylc6Sb771reRHqzdi
      CkvE1VjceyzgIeBsxd/Tiq+7CcndhRLwIPvdyD43iuRFyAHEXh8clG+9udenJuvel4wNvSkY
      oz0Ggy3ssPODEicjZImeujyUgGf/8ehpP0CR/LTlfTqIs0EViZ3ZuYxOi6Wszs+Myb0T4GRZ
      puy/v0Fyd+4/Nens23FUbqOj5BuQvw2zETPrJ2i0Opq2vLH/mBzwEpI6i4hJSylfce9BJi2R
      o0lZejcFL197cFr0esb++M9UrFhGoKcDOeAG0fugglMzcDdWIHu9CKEQ6GlFKBIYFFAUhAQI
      hX1OsUanoLMG4azafVCD0Z46g8Qzb6TwlV/sL4QCBXN4IulXPEzBv36KIvkOSJSGsPFn4Kja
      juz37D2iAY0Wjbb3XwSg+fZx2OInoNHocNbvPih7UVkXETL6NMpX3HfQ8eDkLJLP+TWFr/0U
      zQHrK4zBkYz7yVMUvHZVr5g0oDP2bjKRcc3rVK68B1djwUH3Sr/4STor/kdb8UcHHY/L+hno
      tTTlvLjXH73pNZjiMZricTl3oNF9mwfh16J069FF+Xtft3tXqWo1RoLti3E616AINxr9t9eM
      XfQW9bv+jqt1BxwwETQh825c7Tl0NX2FxiD230vvTwVZi2Qp7/WrHjQakNr0aPSgC91bxgy9
      NszKaWgNetzyxsETgJB8FJRVkzkunfzdeUzMnIQsywghKFlzJV5XNSCh1WqJm3Q/Pa3rcTZ/
      jdCCRts7tTcy9QZkRdBW8QJajQY0XrRGC8GRCzCFnEPLnj+g1WoRwgvImGxjiUz7C41F1+1N
      hYIQbhRRhzbMj9Kt7S33e8sXgDZYQXg1iMAB64U1oLX27liP/+B8aUx6NAYNijMAB9S2GoMO
      rUmH7Pz2Ao0O0GnQWYzILh+HorOaUAJ+xKExkvYJS9mbzj7Unhqd4SjVv0CIQ21r0GhMe/12
      yC8aM0L4e40fdNyIEDIgH3R873uEQ4NsCAUQRzguem+hOUJbo9e2DxCHHDchRODwNGFEoACH
      xibSo0GD4OBaQ+y9/NBlJwfmYdCaQBqtjkBPN63NVQQ0IfvDWciyTOjESARWNJpeOYeERWGO
      GIc1uQ2NxohGYwIgOCgFjcaEMWIhAFptEBq0mEwTsFrGYAi6aK8tCxr06PWRhNhHo9FfvS8V
      aHVBKLIgKGgWXu9uFNH7ttVqTGg0RozGNCSpFUVx7E+7VhuMXh+DEF5kufuA41a02iC0Giuy
      3H5AZnW9v2lsKMKFEL01nV6vQ6Mxo9EMwz5ae9daa4YxTIkUCKAfxjUPCIEkS+j135MFMR5H
      G6XVrWRkTsCw97mc7OHRBwN1QczQ8L1bFG+xRzJl0vDtW6uiMlC+J301KipDgyoAlRGNKgCV
      EY0qAJURzbCERRnKvQGOZnM4e0eA7yw69HBu53Qq+nVY5gLpdLphLRzAsHZJCiH2jgMM39Sq
      76J7GU49v6pNIJURzZA3gfbdfjir6n2bcgynPRj+PH4XNk+1PA65AFRUTmZ0f/7zn/881EZk
      v4u87B3UdfmJCbeye+d22r16IoL05GZvwyGZkLvr2ZG7m7K6VpIT4tFq+6B6RaaqJJ+CsgbC
      oyJp2JNHaYOD6KgwqopyKG92ERsRRFFuNjUtLqKiI9AN8G3i6mpi27YcJEMwRqmLbTvysYZH
      Ifc0sWPnboIjY3E0lLGruJrQiChMhgF+NApBW0MF2bmFmEOj8LZXk1NQQURMDK72BqqbHUSG
      2WmsLCS/rJHomCj0ffHdMQh4HORm76DVBZHBWrK378CnCyLIKFNaXII1NAZ8DgpLKwgLj0A3
      QHsAnu4Wtm/fiU9nw4KTbdtyMYVGovU7KC6vIyoynO6WWnbk5KOzhWG3mgbF3rB8A8iBACkT
      p2P0dNHSVI01bgKajlpKKiuIGj0JuaMGa/xYFpx+GjGhdvr8XacEsMakMiExlJa6EpqlCBLM
      fmqbqughigRtByV1zYjgBGJNTpod8vHveRz8so5Zs6fT3dxIaUUdU6dnUrVnDxXVLUydNpHy
      ohyqWwJMz0imvKpuwPYANKYQZs/KpL68jKoWL1PGJ1BeWYOEESXgAlzUtShkxhkpb+457v2O
      hyTJjJ0yC72jlZKKCkZNmEJPQyVOtw+LSYM7AIGAhE4nkOTBaUD4ZC3TT5uJs6WR4rJqsmZM
      pqa8goAkAKl3bwmdjVkzJtPc2DBo9oZFAAZrMD0NFQTHj0IvS9jsdiJCTXT5tITYrAQHm/H7
      BZ3NDdij43qnQvcFvQlTwEGTR0NisBFbRDThIVZcThfWkAhiooLxyBYcjaXsaXYTbB54dkNC
      gikvKSMpbTR6kwWr1Y5R60VrsWGxBKE3mIgLEWzPyafD4RqwPTRgM+soKWtk3JgEzEHBWGwh
      aEWAqKjI3inxiheLLQJ7RCiBI0zD7i9mWzAdNSUEJ6dh1uoIstqw2/TobREEmXprNFtIOFbj
      4PXOhIQEU1lSSvzoNPRGC1ZLECa9TEh4JCadBtBit+kp2VNH2pjUQbJXMjwC6GksobJDAZ8X
      rSWI2tLdlDV5GBWqp7S0mPo2LzYzNLS5SIjq+wbbireLncU1WPQavOYwuiryyK9oISoyhvbq
      3WQXtxFudmEMiiYiSEe3c+CFoyB7O1iD8Hnc6CU3RUX5BPTh6LzdFBUXIPR2LPYwIkLsxMdG
      DdieEIK8nBxMVguuAPg7GykuLkJvttNcV0tTUxOtDh2urnLy8yuwR9gGbLOluphGtwbhd2PU
      ayktKaTJoSA87dQ2NFHX0EhPZysNjY3UNbQwGKM8xbnZyGYbfq8bo+yhsKgAH1a6WhtpbGqi
      rrmVvJw8jFYzHpfn+Dc8DkU52cjmoOH5BtDojOg0ChqNnsj4eKw6QXRSCtGRkRiETGxyCjaj
      jmB7CCZj3/uZBTpMBi0CDVZ7JLHhFmwRMcSERxASZCQoOpGE6EhMOgVzSCzxkXYG2qFgtpiQ
      JQW9wURSUgIBScvolCQiI8N6/z81CSQfGnMooxKiGYTmMSajAUWAyRJMYlwkis7GqMRIPC4X
      wfYQjJZgkuIi0NoiSIy0D7jXRG8woEGg1emJTUxGp8gkpqRgUAIoehsWkwGrUYveZMNoNGIP
      tjHQbJrMJhR5r1+TE5EDgpSUJGS/B7M1GL3RRFRYCIoQGMwWgiwD+wbYZ0/tBVIZ0agDYSoj
      GlUAKiMaVQAqIxpVACojGlUAKt9vZBdrvt6MIrnYuGVnvy9XBaDy/UZnQ9tdzsqVqxEhcTRX
      FbJy9Ua8AS/bN66lqqWHmupyinbl4jw0nBBqbFCVU4BZp8/lyf+s4raFNl568gXMFjOSJZRA
      /R7W7m5llKGKlHlXYT3CtCxVACrfe6zWEOKSkjAZ9ERFxxEzegJxVgebXBpsOhmDPYqxyUce
      lFQHwlS+/ygyLm8Aq9WEz+3E4fRiDw3F53Gi05vQaQQmi/WIc8xUAaiMaNSPYJURzf8H5Kmw
      E6SukFcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Percentage of Meat Recalled' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5gU9f3HX7Oz9W6v9965xtGbCmIAUVSwYcWWWBM1JtEYEzWxa/CXRE1i
      i72iomJBBAREkHoc5Y6D6733293bOjO/P1AiAa7AHhx38/LhebzdKZ+Znfd826cIiqIoqKiM
      UDQn2wAVlZOJKgCVEY32p39sqWmmwWI/WbYcRCPABaNiEUXxZJuiMsw5RAANFjvlHZaTZctB
      NAKoQxOVE4HaBVIZ0agCUBnRqAJQGdGoAlAZ0agCUBnRqAJQGdGoAlAZ0Wj73qRvJKeVhr27
      cAtmYseMRScKdJbvoqmuneDUMYRFhR6yvcfaSvWeAnzjMwn2cVBWUIpvWCIxmSmqIlVOKF4R
      AIJIWNZkbLV7cdgldGYRlwOST5+FTgRbQxnt7S6iMjPQagQ662sIHzONrpK9dJt0xJ52Fmad
      uuqrcuLxigA0Wh226hLwjcfsqwVkRNFDxfer8QmLoKO0GEQRUSfg6OzC5G/Ez2BArxfQ+PnQ
      sGUdgimU+JwsqrZvQNSIeCakIsuyN8xTUTkqXhGAo7mCpuom/EIlfP10uGURRTBg8vNHlsEU
      FIIxIISA6ASiR5nort5L3a4tIPoSioIxIBCXS0bU6UmbPhuNAFqtFq3WOw2UisrR8MoTZgiN
      J9EUiiJo0Bp9EBUNpoRUfJ0u9GZ/FFcPbpeE3mQAwC8uA32QFa3JjChI6Mw9aH3MiOoAQOUE
      46UukAFTgOF/PjVhMpgO/K/RF63xv98IgojRL+CHv0RMAXpvmKGiMmDUd67KiEYVgMqIRhWA
      yohGFYDKiEYVgMqIRhWAyohGFYDKiEYVgMqIRhWAyohGFYDKiEYVgMqIRhWAyohGFYDKiEYV
      gMqIRhWAyohGFYDKiEYVgMqIRhWAyohGFYDKiEYVgMqIRhWAyohGFYDKiEYVgMqIRhWAyohG
      FYDKiEYVgMqIxisCUGQPzXu3U1tUhvxDeV9XVwMVudtxeQ6v96t4eqjZsYmuzh4kWwul36+j
      Zn8ZamVglRONV3KDeuwWfGLS0bYUY7V68DcrNJXXEZkWR2NxCVEJ4TjsEr4hwWgEgfby/fgn
      Z9NZWoDiZyBs0gz89Wp9AJUTj1cEoPMNxNlYiUcMI8BXC3IPom8gRnMQGrmaknU7sFo9xE05
      HamnB61Oi9nPH18fHW6thvZt6+kKSSAqNZ7KbWp9AJUTh1cE4Gqvo6PDRUh0JMhuPIqIbGuj
      q1EARUQMjCdtXByGwGC0Gg3W+mK6G+qw9cgEhwUTExRBa3kFgjZVrQ+gckLxyhhAMJgQPTba
      62rwOHpwOBQi0lKxWz1EZk8gblQsPRYbos6I3seHoKQMlJ5OwjJG42v2pbuhgZC00WjVIbnK
      CUZQFOXg2PPTwirKOywn0x4ANALcOSVDbQFUBh31nasyolEFoDKiUQWgMqJRBaDiVdxumT/9
      cTOVFd0n25R+oQpAxat8+mkZi/+6g6+/rjrZpvQLVQAqXkOWFZa8V4xGI7BlSyM/mWAcsqgC
      UPEaBfltrFtXx+zZsezd247DIZ1sk/pEFYCKV1AUhU8/LScpyZ/f3TOe4qJOrFb3yTarT1QB
      qHgFq9XNW2/u4/obMkhNDQSgqKjjJFvVN6oAVLzCt9/WYbd7uOiiZCIiTKSlBbIzr+Vkm9Un
      qq+BynEjSTIvvVDAOeckkJDoD0BSkh+525tPsmV9o7YAKsdNSXEn27Y1ce116Qc/O/2MKHbv
      bh3yM0GqAFSOC0VRePfdYqJjfJk1O+7g5zk5odQ32GhosJ1E6/pGFYDKcWGxuPl4aSnXXptx
      yOc5Y0IQBCgt7TpJlvWPXgWgKAqyJP33nxqhpfI/rPmmhrY2B4uuST/k84gIH+JizeTtGNoD
      4V4HwZK9jcpt2+lq78Y3wIgmOINR49N720VlhPHaq4Wcc2484eGmw74bnRNCfn7rSbCq//Ta
      Amh9Qkk960zMARHEjxsDDueJskvlFKCoqIPNmxu56aZsNBrhsO9PPz2KXbtasdmG7oJYP8YA
      vgQGeSjdXoB/XPTgW6RyyvDO20XExpmZdlrkEb/Pyg6muspCZ8fQfXH2QwA9tNW14B8eg7Wm
      fvAtUjkl6OhwsOzTMq67PgP9UVLaZGYGA1BWPnQHwv0QgB6jv5G2kkJ0IcGDb5HKKcHatbXU
      1lq5+uqjjwl9fbSkpAQM6RXhXgfBsseJvbOLsKxpBKV4MAaGnCi7VIY477xdxAXzkwgLMx51
      G6NJy7jxYeTmDt0V4d4F4LLQuG8PPzq1mqMFTObYE2CWylCmvLyLr1dU8dWKBYhi752InJwQ
      nn8+/wRZNnD6Xgdwe/77T10HUAHefaeI0aNDmDI1os9tJ04Mp7bGSnu74wRYNnB6FYDON4y0
      WecQGhOK1mBA1Km+cyOdjg4Hb79VxKJr0vH11fW5fUysL2azjoL8thNg3cDpxyDYQlNxBRpB
      h7N7aPt1qAw+331XT2ubnauuHtWv7ePi/IiNM7Njx9AcB/RrHSAiazSyqx2NwTD4FqkMWTwe
      mVde3su8eQlHXPk9GpmZQUPWNbofAnDjdulImTELveo6N6KprrawcWMDN96UjSAcvvJ7NGbM
      iKZgbztO59CLEe5Hp16gs7IAT08tDk00R1rzk+xdNO7PxRBzBqHhB6bF2vZtoaWlh5C0MYRF
      hR6yvbO9hqr8/RgjU4kIcFFaVIt/eCIxmSmqe+oQ5tVXCklJ8WfKlL4Hvz9lzNhQGupt1NdZ
      SUoOGCTrjo1+CMBA0rSp2KwS4WHhR9xCY/QjKi2Zls4fFa7gcihEZo3FLyiQzooC2ttdxOaM
      Ra8XsbS2ETdtFt1Fe+hsVQjPHE1AQDDIMpb2VkRBQFHS1VmnIYTd7uHTT8q4+ZZsfHzEAf02
      2dlB2O0eKqu6SUj0G0QrB8bGDQ39EYCD8o3fYIzKpKOhk9Qpow/bQhA0B1I6/wRzRASWxkq6
      a9101jWiNxrpqCnD1taB0c+AWRAQNOATE4OlsZHa6hrixozD2tKEqNEgy/KAmlmVweXrFZW0
      tNi55NLkAb+YRFEgOzuY7duamDEjapAs7D+trXbcbpmlS0v7IwANolakvaSQwOwzjriF29JC
      9Y4ddDuCMftk4caIs70Va3sXvjHJmP27kTQ+mMJiiUgZRU9jKVXfr0YfmojB0oa1rQWNbwSi
      TktUZg4aAURRVNOjDxEkSebDD8uZd14CCQkD78KIosK48WHk57cjiuJJe7E5nRJffF7Bk0/k
      svCyVP729xl9CECRsbU0EzpmJnEm/VETHen8wkg569JDPwyewsGeYkrKIV/5RKaSHpl68O+A
      +KyBXovKCaS0tItVK6v55NPzjml/QRCYNCmcZ/6xC7dbPqrz3GBSVNTB449uZ9fuVp588nTO
      vyAR6GMM4Oqqp7qwFF8fJ5V1FuKmzToRtqoMMZZ9Wk5aWgCTBzj4/Smjc0IoK+vCbvecUAE4
      nRIWi4tFV61k5s9iWbP2YsLCDkzhKorS+6SL5LShuGUUQYNG9EVEHZSONHp6PLz8UgFXXjUK
      s7nvld+jkZDgR1iYiR0nyDFOkhQ2b2pg/vlfsHdvO9+suZi//W36wYf/x216bQEMwXFEpeuR
      AXME6I36wbZbZYjx3fo6nE6Jiy9JPq7jhIaaiI72Zc+etkOyRwwGzc09PPnEDj77rJzf3T2e
      SZPCj+i24XbLvbcAGp0PQfHR6IwBhMTFoLg9g2a0ytDD45F56cUCzvpZLIk/JLw6VnQ6DRMn
      hbNlc6OXrDsy+fmtnD17GR3tDjZsvJTbb885qs9SXZ21r3UnD427vyd/+RcUrV9NU+3QXM5W
      GRwqKrp/iPnN8srMTU5OCLt3tyJJ3u1KK4rCvsJ2fn/PRkJCTPz9mRm89sYcYmLMvdq9a2dr
      X9OgIiGjxoMhDr/wYHS+x/cWUDl1UBSF994tIjLS56gxvwNl8uQIOjudVFdZvLYibLO5efed
      Ip54PJdrr8sgPNxEdHT/ulh5eS19CUBAZzLRtv976nZr8Rs1WU2LMkJwu2WWLCnh1ltHYzR6
      Zz0mKzuYnh4PJaVdXhHA9u1N3PXr79DrRT5Zdh4TJhzZU6G3/fvheiOj8wvH4CvittmP0VSV
      U41Vq6ppb3Mwf0GS145pMmnJzAo67tiAjg4nmzc1UFdn46absvn8iwsG/PBbrW4qyrv7sxJs
      ImHKNFwOF1qfwGM0WeVUQpYV3npzP+eem0Bysne7vRMnhLN6dQ13/WZsn+GU/4vD4WH58kru
      u3cT55wbz3P/nIkgcEzjk5KSTrq6nP0RgJOyb7/CFJ2J5GkhdWrOgE+mcmqxf38H69bW8uFH
      87zutjBhYhjfbajHbpcwm/svgIqKbv74h03sL+rg2X+eyezZcUdMxtVfSoo7MZm0/ekCadDq
      tbQV7wUf32M+ocqpgaIofP5ZORERPsw8K8brx58wIZyi/R00N/f0a3uLxYXV6uLBB7YwKj2Q
      NWsv4rzzEjEYjm81efv2JsZPCOsjN6jLRkdNHQHJOZginPhFqXmBhjvd3S7efquIm27OOq43
      7NGIjvElPNxEcXEnyb0MhCVJYffuVn512zquuDKNF148Cz8/7yzEejwyBfltTJwU3kdaFKcV
      W0cXsqON1sYOxMAoAkPVccBw5usVVbjdEldcmTYoxw8KMpCREcSqldWce27CYd+7XBLLl1fy
      9YoqLBY3t/0qh4ULU4/LDeN/6ex0sndvO3f8emzvAtD6hhCaIGHrMCELWiSXy2tGqAw97HYP
      jz6ynetvyCQ62jwo59DrRc76WSxfLa887Lu9e9vw89Pz5uv7+OP9k5g61TvrD/9LackBp7yJ
      E8N7HwM4OyrI+2gJFTt3Ybc5GOLVblSOk82bG2lrc3D5FYPz9v+RnDEhFBV10tFxIFeQJCk8
      +8wu5p3zOZWV3Xz86XmD9vDDgetMTQskMFDflzNcCqfffOfBvwXNiffjVjkxeDwy/3m5gNPP
      iCI1dXDjdrOygtHqBEpLuoiMcrP4r3lUV1tYt/4SkpL8B2Xs8VPy81vJygrGYBB7bwHc1lYs
      7S201zQj6nRoBjhvq3LqUF9vY/36eq6/IWPQI7aSk/0xGrRs29bEL25Yg8Ph4Y0355CSEjDo
      Dz/Ali2NTJocjiAIvbcAolZP895vaSzroKEoHP/EsSRmHp9brMrQ5P33igkOMjBzpvenPn+K
      JMmUlnZhMIgUFXXwzntzCQ42oNOdmN5Fe7uD5iY72VkHZjR7F4ApkFGzLiEkbj+2HjdhCWpi
      3OGIxyPz/nvFXHFlGgEBg5f8rLPTyXPP7uaV/+wlOSWAbduaCAw8cQ8/wI7cZgwGkfSMIKBf
      ibGctFY1ERhqpCa/eJDNUzkZrF1bS329jUsvTe1742NAURTqaq3MO+cztm9r4suv5vP7eyfQ
      2NBDZ+eJrR6zf38HYeGmg5Fh/SqQoRXtNJdVoQ9Q3aGHG7Ks8O47Rcw4M5qsbO8udCqKQm2t
      lXvu3ojbI/Pwo9P47IsLGDMmlNNPj6StzUFlZbdXz9kbsqywdWsTp02LPDjW6IcAdCTPPJf4
      yWeRkD64oWwqJ56ysi6+/rqKn/8806vH9XhkPvqwlFlnfYLTKREQoGfu3PiDD55eLxIXb2bf
      vg6vnrc3LBYXO/NaGDP2v5kK++UMZ2mx4R9uprulA/9w1R1iuKAoCl8tryTA38DZc+O9dtyy
      si5uvWUtPTYPz79wFj+bFXuY56ePj5YpUyLYtLGBG27wrviORmurg8bGnkOyW/QhAA+NuzdS
      lldDSFIoon+aKoBhhMMh8eqrhVxzbTp6L2Q+tlhcbNxQT3CwkXPPTeDW20Yf1X9HEARGjw5h
      yZITN67cV9iO2y2RPuq/7jx9hkSGpk9A1kTiExqIwV99+IcTubnN1NXauPyKtOOa+5ckme++
      q+d3v91IYqIf7y85h6nT+l7JnTQ5nIcf2obD4fFa1NnRUBSFXbtbyR4dgsH431mnPkMitUYD
      7WX7cDlj8PGImHz7nxdeZegiSQovvpDPz2bFkJJy7Cu/dXVW/vLnrWze1Mj9D0zissvT0On6
      15okJPjj66tj9+7WQXV9+JFtW5uYODHskMRc/bBUwOO0YLd04XKoznDDhbo6K2vX1HL9DZn9
      fmB/iiQpdHe7eOU/exEEWL5iPlcvSh/QsWJjzUREmNiz58SUT8rf00pW1qGVTvvR7hjJnHch
      iqhHEI/skir1dFK/93u0UT8jKtYHFJmm/M10tHUTmDqJyLiwQ7a31RdRU1SJLjCGqEA3pVVt
      BEUkqfUBThCKorB0aSkBAXpmzRrY4qYsKxQWtvO732wgIzOIxU+fgcFwbAlvdToNOWNC2bql
      kZtvzh7w/gOhvt5GW5uD6f+Tnbpf6dHL1v8YEqk/Ykik6BNIbHY2ze0/uIvKTjz6MNJnTKKu
      eD8t+6rp6nIRnTMRH189dquDpOln01W0i64uBz7+/gREhqO43VTl5yFqNEgT01BU99NBwW73
      sOS9Yq5elIZeD263u1/79fR4ePKJPD7/rILLLk/mjjvHIIoKHs+xJ0wbNy6EpUvLcDpdg+oH
      lJfXRFCQgdBQ/SHX2w8BiGj1Im3FewkcPb1/ZxMEFI8bWXKDs4u62lZ8/AOxtVbTuLcNo58e
      ySMhSxCYPoYgj5vG/XsxTZhKZHo2okZAo9Go6dEHiby8JsrLu7l0YVq/7rEkKTidHi6/bCW+
      vjqWfnIeGRmBXnGamzwlgr//fTfNTU5i4wYnBgEgb0cro0YFERl5aLKsfjxhHnwic4ifFkpb
      3ZHjON2WFmp2FtDj9sPsk4FbMOPnK1O2bRsRoychKLvpcWgwhsQQlpCKq7Oe6tzvMMWkI3U0
      0FhRgyE0Ca1GQPA1o/kh0l8tkDE4vPZKIbNmx5KREdTnPa6q7ObRR7dz4YXJPP1/0w+4Mmu9
      11EdNzaM7i4nzc124uIHr3rM9u3NjJ8QhkZzqO39EIAWa0MJ7p56ZHPKEbfQ+YWRfOYFh34Y
      lEPADyllAoJmHPKVPjCa1BnRB/9OjR7cAAyV/1Jfb2PVqhr+/fzMXtOSeDwyb76xj3/8fRdn
      zoxhytQIIiJ8vG6Pn7+ehER/nK7BK6Bns7kpLelk0aLDk7r1QwAKQcmj8Y+IwOg/dOo7qRwb
      S94vJiTEcLBAxJGorrZw+6++pbPTyf/9fTrnnBM/aK2xIMCE8WFI0uCN9yoru2lqsjN5yuHJ
      s/rRlim07FpP6Y4t1JfXDoJ5KicKm83NBx+UcOnC1CMuPFmtLp59dhcAF12UzNcrL+TccxMG
      tSsqCAJTp0Wwr7B90M5RUd6NqBWIP0IXqx8CMJB2zsWkTp5GaPTA0s+pDC3Wf1vHvsJ2bvqf
      KUdZVvhsWTmzf7aM1StrkGWFG2/KPmpacW8zOieEnTtbBm3Wb8uWRiZMCDtiZZr+ZYb7bgXG
      6Exkj4HUqYdXiTzZSJLCl19UMHtOnFfTZww33nmniAvmJxET898EZ1VV3Ty9eCdr19bwpz9N
      4sqrRnl1kNsfUlICaGjoGZT6YZIks2d3Gzk5oUf8vl+Z4USdSHvxXjANTTcIt1vi/j9t5q03
      96lrB0ehttbKF59XsGhROqKooafHzfbtTZSXdePxyHy7/hKuuTbjhD/8cKB6THubY1AqyTsc
      EnsL2zjt9CO7WvTaAigeBzW53yMbw0iZM4nA0KFV5ftHjEYtl1+Rxr//nc9NN2eflCqEQ523
      39pPZlYQs+fEsiO3mUcf3Y7V4mLFygX8bICrwd7GZNIiywrFRZ1MnOTdbnZbm4OG+h4yM4OO
      +H0feYHqkIwxxKZG0N184iJ3joXLr0ijuamHNWvUgfr/YrG4eO+9YuacHc+TT+zgsoUrmDQ5
      nI8/Pe+ExuP2igA78rxfgWjXzhZiY81ERh45r22vLYAginSX78BSq+B0KKCZSkKm9/LFe5OM
      jCDOvyCJF57P5+yz405KUz5UWbe2loZ6G22tdurrbaxbfwkJCUNrSjs52Z+8HS1eP+7GjQ0k
      J/sTGHjkYP8+EmMlMvaSRK8bNVjccks255/3BQX5bYwbH9b3DiOA6moLTz+dR86YEBY/fQZG
      o/a4MysPBmPGhPLBkhKvH3ffvnbGjQ9DFI88lTusXpPTToskMyuIV18tHPGD4Z4eN++8U8QZ
      py1l+7ZmHntsGv7++iH58ANMnBhOQ4Ot32nT+0N3t4u8HS1MnXr0At/DSgAajcCdd47l44/L
      aGkZueWc3G6J66/7huee2cWo9EDGTwgjZ0zokPatyswMwmbzsN+LQfJlpV24XBJpo46e0XxY
      CQDg7LlxmH21fPiB95vToU5np5OnF+ex/tt67r5nPB8unUdZWRc33JCBv//QLnIeGeVLVJQP
      xcWdXjvm7t2t6A3iUWeAYBgKIDTUxKJr0nnxhQIcjpFR2Nvlklj+ZSVnnfkJ339fT2ycmWnT
      Itm8uRGPW+aKK0edbBP7xZQpEXy/sd5rx8vNbSYrK7hXp79hJwCAG36eSWNjD2vXDv8p0Y4O
      J3fcvp7f/uY7HvjzZN57/1wyMoJwOiVee6WQeeclHHUGZKgxZmwoZWXdXlkQc7kk9hW2c+aZ
      0b1uNywFkJDgz7zzEnj5xQLcbu9WJR8q2Gxuli4tpbPTSWpaAFu2Xc7Chan4+ByY2CssbCcv
      r5m7fjPuJFvaf6ZNi2TXrhavjN86O53sL+o4mAP0aAxLAQDcdttovv22jqL9Jy7z2IlAURT2
      7m3jsktX8Nwzu9HpNNx770SCg42HbPfmG/sYNy5s0HP9e5PEH2oDlJV2HfexGhp6sHS7+sw2
      MWwFMGlyBOMnhPHqq4Un2xSv0dXp5MEHtnD+vC+YNTuWFSsXEBt7eBhhR4eDZcvKufGmrEHP
      t+NNAgMNjBoVSG5u03EfKze3mcREf0JCeu/+DVsBGAwiN9yQyfvvF5/wDMTeRpJkqqq6Wbeu
      joqKbpavWMA9v59wVHflDz4oAQXmzDm1crn6+GhJTw9ihxdWhPP3tJKZFYzJ1Lt38LAVAMD8
      BUn4+el45+39J9uUY0JRFOrqrFx7zWquWbSa2XNief2NOWT3ksXZbvew9MNSFl2TTvgghDAO
      NpMmh7PLC7EBWzY3MmVKxFFXgH9kWAsgONjI9ddn8sYb+7FYTq2kXna7hzff2MfMGZ8QF2dm
      yQfn4Oen79PTNS+vhR15LVx22eDk+h9sxowJpaHBRl2t9ZiPYbO5KS3tIiur9wEwDHMBAFxz
      bTqlJZ1s2dx4sk3pN7Ks8MD9m3nt1X3859VZPPnU6cTE9J0yRFEUXn+tkNNPj2R0Tkif2w9F
      MjKDMJm07C869gWxfYXt6PUaMjP7zmV76oyQjpH4eD8uvCiZf/xjF7Nnx6Hpo0k8mXS0O1i8
      OA+Ae+6ZgNlPh9ms67cLQ2enk08/KeONN88+Zb1hIyN9CAo2kru96ZjHMLv3tBIUZCQyqu8u
      4Kl5lwaARiNw883ZfL+xgeIS7y2zexNZVlj+ZSVzZi+jtLSLa65NJyraFz8//YD8d157bR+h
      oSbOmB7V98ZDFEEQmDYtkvz8Y88XmrejhbHjQvs1AzbsBQAwcVI448aF8sp/9p5sU47I9det
      5oEHNvOHP07k3ffmkp098O5LT4+bD5eUcOONWYetCZxq5OSEkJ/fhtXav5SNP8XjkcnNbWZM
      P7uAI0IAJpOWm2/JZsn7xTQ22E62OQA4nRL//tceNm1q4KKLklm56kIuvzztmMM5N2yop6io
      g8uvPPWTjE2fHkVDvY3W1oGvCLe02GlosDH1tP6lWx8RAgBYeFkqgiDwySdlJzVWQFEUdu1q
      4cL5X/Lx0lL0epFLF6YSHn7sU5aSpPDhB6Wcc248iYmnfiHDjMxgBEGg5Bg8Q6urLbS2OMhR
      W4BDMRq13HhTFq++UojdfnK8RDs6nNz7+++5+sqVzDwrhpWrL2KSF4LAa2osfPRhCddck+EF
      K08+er2GlBT/YxoH7N3bTkpqQL/dv70jAMlB/e6tVO7aifuHZ8vV3UT17p24PYe/bRWPnfrd
      2+nu6gFFoqlgG821jQz2e3nRNelUVnazcWPDIJ/pUBRFYcvmRiwWF52dTj5aOo/7/jjxmApT
      HImlH5WSnh500rM7eAu9XmTqtEi2bG4cUGv9430eOyak37NgXvkFZFsbsl8ssdnZaEVAcdNU
      Vk1IbBiNJaV47BZsnV3IP1xMe8V+TNHJdJTspXV/HpqIUQSF9r1ocbykpgYwf34Szz27G1ke
      /G6Qoijs39/BL36+hltuXovTKfHSy7PIHh3iteisnh43r75ayCWXpgyrpGDp6UE/ZIvr/z4/
      Fu8YNz6s37UGvLIOICkitprdVLWHEDd2AnqNG9E3CJ/AMDoa91CyLg+LxUP81DNQHHYEQSQo
      KBippZouWxdKx05sfhHEjEqlcvsGRI2IZ0Iqsux9V+ZF16Zx5eWryM9v7jVS6Hix2z289WYR
      L71UyJzZsaxYeT5hYSY8noHPbPTG8uWVtLU6uOqqFFyuU2u1uzcmTgqhrs5GU5OFkJD+zWp1
      dx+oA/zYY1P6fS+8IgBFNBA9egq2hn3YbU5Es4hka8fSqkWRBAS/GNJy4tAHBKIhmJ6mMqwt
      TVh7JPz9A9EGx2OpKQZRR9r02WgE0Gq1g1Ig42c/iycjM5iPl1bw8CPhXo+TVRSFzk4na9fW
      s2RJGS+/PIup0yL79Ek5FjwemQ8/KOPCi5JITBr8FvREEhsbQEiIkcK9Xcye07+BfVVVJz4+
      WuLiA9DrT+AYQGfywd5ciSYgCX8fDz09MpGpSVharURmTyQuNRprZzeiwQeTvz/BSZm42xsI
      TR9NWGo2ruZK/GIz0GoHf5VWq9Vw++05vPXmfq8Hzjc22njoL9u48vKVnD0nnrXrLub0M6IG
      5eGHAyk/Vn5dxaJrDs97f6oTHe1Lcoo/W7f13zV6/bd1xCf4HTEL9NHwigAE0Qz6NtwAAB3P
      SURBVEB45njC46IQ9H74+ZvQ+YURkz0anSjgG5VMXE4ORsOBPqqgNRKZPR6znxE0OiKyJhAU
      FsiJclI4d14Cgkbg888qvHI8j0fms8/KWTD/S7Zvb+L5F8/CP2DwU5B8vLSM8ePDmHYCSoye
      DDIzg9mzu7Xf2+fltZCaGjigyYURMw36U4KDjdx4Yxb/eXnvcRdm8HhkHn88l/v/tJmHHp7K
      F19ecFx1d/uL1ermlVf2cvkVaRhNw9Ola8aMaHbtbO1XcgOnU6Igv63PGOD/ZUQKAODyK1Ip
      L+/iu+/qjml/q9XFyy8X8Pe/7WTRolGsXXcx552X2GsGAm/yzepqRFHDxZccuWzVcCAzM4j2
      dge1/XCNrqmxUl9vY1T60XMAHYkRK4C0tEDOnZfAv57bM6ApUUmS2bGjmfnnf8nbbxVx9tx4
      UlMDj2sld6C4XBLPPbeHuXPjiI4+ctLX4cDYcWE4nVK/YoSrKruRJHnAFedHrAAEQeC2X47m
      u+/qKOmnl6jHI/P4Y7lcdukKLro4mZWrFjDeSzlIJUXiu/rVvJD/NGVdRb1um5/fxp7drdx1
      16mT8eFYEEWBzKwD6wF9kZvbTESEz4ATgI1YAQBMmxZFSkoAb7zee2ENt1vi6xVVVFVZCAw0
      sGLlAn5911h8fLyz8CTJHr6p+YJ/7nmS/PY8fr/pFp7Z/RiNtrrD7FIUhXffKSI9I4j0jIE1
      96ciU6dGsmtXa6+ttCwr7C1o48yZMQM+/ogWgCgK3HHnGN54fR/dXYcvnMiyQlFRBzf+fA2/
      ues7mpp6+PVdY0lP77u+bn+RFImvq5fxSuFz3Jz9W/454x3un/gU9bZqbv32cl4oePoQIXR2
      unjn7SJ++cvRQye3/yAyblwou3a14ujFf8tu97BrdytTekmC+1NktxtXYyNdW7aMbAEAnHNu
      Aj4+Wr78svKQz10uif+8vJezZy8jJtbM+g2Xcvrp3g802Vj/Da/t+xe/yLyTObHnI2pEJoaf
      xqNTn+NPE59kf2cBd228jtf2/ZNOZztffVVJQICes8+O97otQ5Hx48OorrJg6SU2oKvLRWVF
      N9lZh4dAKoqCu7WVjnXrqP7b3+gpKqL8vvvYMW0a+66/fviHRPZFWJiJa6/L4O9/28nlV6Qh
      CAfqymq1GpYsKWbZ5+czfnzYoKwYr6ldzvMFi7k1+27mxi045BwG0cjUyDOZFH4GeS1beLvo
      RZaXfsbupy7m3PPTCY8YmvXavE1MrJnIKB925DZz3vmJR9ymsLCdoEA9sQEebPv346yuxjcn
      h7rnn6d12TLc7e0YoqIwjx2LNHs28X/4A0kPP4zGZEJQftLJ/LSwivIOy4m6tqOiEeDOKRmD
      4gpxJCorupk08QP+/fxMdu5s5dNPyvjq6wUkJPgNWmztt3Vf8889T3FN+i1clHRVnwJzSU5e
      X/4Nv7mmiLnPbeKSabO4MOlKAg19B36fyrjdMnNmfcq55yXwxz9OOvi5x2LBWV2NMSGBFTc+
      SNWXaxgf40KQ3JhSUkhZvBi5pwdBq0UfHY0hKgpBPKYyqcOf6Bhfxo8P48ZfrGXBhUmsWLmA
      pCT/QcmnLysy39at5PmCxVyf8SsuSFzYr/NoBT3bPzNyxuRE7pidxkelb7Gq5nPOT1jIvIRL
      CBqGQlBkGVFycfpoA9s2VtPwRgHdmzbRU1aGo7IS0Wwm6913KWg24HfB1Yx/fCG68HBEHx+E
      fr48R7QAFEXB6ZT46KNSSko6ETTw8CNTSU4evJXcdXVf80L+Yq5Nv40FSZf3e7+WFjurVlbz
      j2dncHZcKjOj57Ki6lM+r/yALys/YkHSFcyNW0Cw8cj1cE8FFI8HRZbp2rABW0EBlrw8eoqL
      +VlpLd/o78KS1YIxMREFCD77bOJ+9zsUUctL5Rk8sGgyptSB50IaFoNgRZJo/uAD7KWl/Qqg
      UBQFh8PDC8/nc8XlXzNrVizfb1rI+PFhvDpIgfOKorC+bhX/zn+Kq0bdxPykywa0//vvFWMw
      ipx11oGgF71o4MLkK3lm+htcmfYLPqtYwp0brmVJyWt0uzqHdIkoRZYPDE7b2+navJmaZ5+l
      YOFCdp51Fu6WFuqef56ekhLM48aR8uSThL33FfWeADzzb8BeVkbLJ59Q9dRTFN12G1X51Tgc
      Ejljjk34w2IMILvdFF55JR3r1pGyeDGR116LxnDkpKiSpLBzZwt33P4tPiYtTy0+gylTDkyf
      vfH6Ph5+aCs7d11FYJD3cur/OOD9Z/6TLEy5jmvTbx3Q/na7hzNnfMwll6Twxz9NOvI2nh5W
      VH3Kp+Xv4ZTsXJxyDecMkRZBslpx1NbiKC+ne+tWbIWFxNx+O62ff07Xhg34pKcTNHs2fhMm
      4JudfVj3xdLl4MrkP3GL4z2iM2JIf+klUBT233QTTeXNvGC6hg/KHsfPb+BVcIaFAODATW54
      /XXKH3yQwJkzGfXPf2KMP3yq8K9/3cErL+/lN78dx3XXZxxy09rbHUye+AEPPDiZn/8iyyvX
      AvBd/Wr+tvMhLk6+musyfolGGFjDu2ZNDYuuWsk3ay7uM+Nbl7ODVTWf83HZO+g0OuYnXcEF
      iQvx0Z4YlwnZ7cZeVkbP3r1Y8/MJv/JKqh57jK4tWzBEReE3aRLmsWMJOe88NEbjgX+9+O57
      urupffZZ9j32f0hnX8o5bz6NLuTAPXC1tLDm579Hs2op6Q/cS/y996IxDiwlzLARABx40/YU
      FlJ8xx3YCgpIWbyYiEWL8CDy9YoqOjqcZI8OJsDfQGpawBEHn3/581a+WV3NN2svxnScXpaK
      orCubgXP7XmChSnXcfWomwb88Hs8MouuXoUsyXy4dF6/BsyKomB1d/NV1Sd8WfkRHkXispTr
      ODvuAvz03hnfyA4Hnq4unLW1WHfvJmT+fEruuouuDRvQ+Prik5qKeexYom6+GdFkQhsYeGAW
      RhT7dw2yjKOykqJbb8VWWMiKxOspijyDD5eed3B/RVG45KLljGrczIX1b+Gbnc2oF1/ElJjY
      7+sYFgKwe3oo7y7GJPqg1egQ7S46XnqD9mdfwnHWQt7QXcr+fe08/Og05s/vvdB3ZUU3Eycs
      4aOl85g1+/jSi29u/Jand/6ZBYlXcEPm7cd0jKqqbk6bupTXXp/NufMSBrx/h7ONr6uW8WXV
      UvQaA/MTL2NC2LRDhCgKIlrNoW4dBtGA8EOEhuhR0LR04SivwJCTSd2jT9K9ZQv29hb0BhPm
      nDEkP/44HosFjdGIKTFxwG/in6JIEo1vv03FAw9gHjeOtGee4ZMtEn99agcbNy086O9jtbqZ
      MX0pd901jstPE9h/yy04qqpIeughIq+/HkHT98tmWMwCdbs6uX/LHciKjK/OD60g4nO6H+HV
      f+W1Jc2YZ3/EmN83sy5wNVu3+HLb6LvZUL+GZnsjZp0Zg2jCpPVhSvh0evwtTLy0m9e/+YrY
      iTMwiEaCDSEYRBNOyYFG0KARNAgIiBotoiCiKMqBz37yZtrctJ6/7XyIefEXsyj9lmO+tjde
      30dIiPGY0x0GGUK4Mu0XzEu4hBVVn/BJ+Tu8X/LqIcFHCiAgoEgSGocLg13GHejD5I/rCa90
      EFHrRnB5aPN18fUDowk2NdJ2pZbucH80JhOiTwuU3nbweP4NAZwZfTbnJ1xKkKH/CQAURUHq
      7qbioYdofOMN4n77W+J+/3tEk4kJrnZKSztpb3McFEBdrZXSki4mTQ7HJyOEsStWUPO3v1F6
      zz1Y8vJIeuQRdEG9h4oOCwGEGiOYETWHb+tXMiogi1FtlzI6JZ4lIbW89cUsfKo+ouyZz9Gm
      pxD++1/jpwsk3i8Jg2jA6rFi99hodTQzKjCLyu5S0q4sYOeeJh5evwqzv4bZcRcQZgzntX3/
      RKvRI/7wsI8Jmcj5CQt5pfAZTFpfDKIRg2hEq9GyuuYLzDp/onxj2VC/Gl+dH0bRyKjAbFod
      zSiKgl7UoxFEDKIRs9YMCIia/y7WOJ0SHywp4dbbRh/TAO9HBEEg0BDEVaNuZH7S5bQ5mlEk
      Ccl6wM++4avP6dq6BVtBET513YRFp2F48z58o9ZinpmBNi2J9mgD/j4ebkOB2f89tlNyHDbj
      1OFsY3XNFyyvXMr5iQuZHXs+0b59p2zp2riRkjvvRLLbGb10KUGz/3uiiEgfQkNNFBV1kJh0
      IEa4ts6K2aw7mDlb9PUl8c9/JmjWLPbdcAPdW7aQ/uKL+E2cePR7Mxy6QAAuycWuxjyu/uX7
      tORFcvF9Pdy36ArSA7NBlulcv57i229H0GpJe+YZAmfNOuqbyemUOPPMj5j5s0gefmwKoqBF
      UjxY3RYkRcIju/HIbrQaHf76AArbd2N1W3FKDjY1rmNH82bmxi9ArzFg81hwehxYPRYckoP7
      JjzOy3v/QVlXES7ZiYCAVqPjnnEPs6lxHbvbcjGIRny1ZqQePV8968df/nQGXf5FGEUjvjo/
      DKKRaN84Ev1SqLVWIWq0mLXmA0LS+WHS+iIj//CWFxCUA4NTy/btWHfvpqewEFthIZ6ODsYs
      X07Jb3+LT3o65rFjMefkoAsLO9Bn70cX4mjYPTa2N2/i/eJXaXM0MyduPpemXEOw4fCC3Yqi
      UP/SS5Tffz+hF15I0iOPYIw9VDBut8y8cz5jxpnR/OWhqQD8+cEtbNncyPIVCw4Lg3TW1lJ6
      7710rFlD4p//TPTNNx9xsD0sBOB2yyxdWsriv+5g9OgQbro3gvXOt9jRspWMwNFckXYDo4Mn
      IHTbqHjwQRrffJOoX/yChPvvRx9+5MxsL71YwFNP5rJ9xxWEhvbtd6MoCrtat/PI9ru5IPEy
      bsi4/ZC3+dFweOw4JQc+Ol/aHK10Otuwua30uO08/MR3ZISlc/Mdqexp3YFDdmBzW3BKDpL9
      08kKHsPz+Ytxy24kxYMkewjThnJr6PW88OXdhNe6SavUoBMNbF4YwQX/qGSPfyN1yXq0o0cR
      Mm4yQTGpzI2fT5WljC5X10Eh+er8iPCJQlEU7J4edKIeAQGdRv9DKyeiEfq+PkmW2NK0ng9K
      3qDaWs7cuAVckLiQOHMSgiCgeDw0vPYaVU89ReKf/0zUDTcc9Vi/++0GSku7+PyLCwA4e/Yy
      srKDefa5M4+6T90LL1D+4IMETJtGxmuvHfZ7DwsBVFdZuOaaVfzq9hwWLkxFq9UgKzJVljK+
      qvqEtbUriDcnclHy1ZwWfibdX62k9J570BgMjHrhBQJnzDjsmHa7h5io13j2uTO59rq+Uw7u
      7yjgwa2/Znbs+dyU9evDBpUDJT+/jRlnLOWzz89n5llH7j7IDgeOqiq6duXRlb8LSZEInDeX
      qutvw5SQgE9GJj5paeimjKMh1USmfzY7u3bQ5mjBITmwua04JTsXJl3FqprPKesqwinZcUpO
      ejw2Fo26mWpLOatqvsCjeEBR0IsG5sSeT3LAKD4oeR2j1gejaMSs8yfJP40zo+ewuuYL9Brj
      D+MrIwatiTEhE1lW/j6flL8LKMyMnss882zcj7xA+5fLyV6yhKA5c3odL7z7bhG/+fV31Dfe
      CEBSwhs8/X/TuerqoxcCVxQF2+7d7L/lFiSLhdR//IPgc845eJ5hIQBZVrDbPUcsGqcoCs32
      Rr6o/JBV1Z9j1vlxWer1TNOOpfmxp2lesoSoX/yCxL/8Ba3/ofln/vTHzaz5pob1Gy45aq55
      RVHY276LR7bfw9z4BVyf8St0x/nwK4rCX/68ldWravhu4yWIsgdPVxeu+nq6c3PRBgaiCwmh
      6LYDA09DbCx+48cTMH06ofPnIzscaAyGfvvD/HjOg/8pCgoyoiAiKTKS7EFGxi27cXoc6DQ6
      NIJIRXcxPR4bdk8PPVIPfjp/soPHsqz8fRyS/WC30CU5+f2ER3gi9z6a7PW4JRfO5iZEWeCs
      V2vYeVMWQkwEPnozetFAkCGE20ffy3vFryAIwg9jKxMNFRIPX23n1eXp+JhFbrrme17411ym
      TUggyBCCR3bjlt1oBS0IAlpBi148sKApW22U33cfjW+9Rcztt5P4wAOIZvPwEEB/aeyp58vK
      j1hV/Tl+en8WJF7B2G1OGh94FENsLClPP43/5MkHt9+zp5WZMz7hiy8vYPqMI2cb2Nu+i4e3
      383smPO4Kes3/er29IYiSfQ0NHPlGS+w8KpMzp/uR/WTT+JsaED08cGUmkr45ZcTcsEFOKqr
      MSUmIpr7Lp80VHBbuin76+NUvfoS5puv5suzHORZdzE9ajYzY+ZiEI0oikxOyEQ21H9Dh7MN
      5w+tldVhZ/El/sy6vxgxqJuW9m7Ss/1wSg5+PeZ+vqtfTV7LloPnMmpNXJZyHZIssb5+FSbR
      hH3jVigoY3TYBCZedufIEgD82CI0sKLqU1bWfIaP1pc5ummMemE7PSvXEf+HPxB3111oDAZk
      WWHhpSvw8dHy9jtnH9I8K4rC/o4CHtr+W2bHnscNGXegF/s/U6NIErLLhaezE0EQsO7ZQ/3L
      L2Pbtw9bu4VGu5EzH72TkPPPp6e4GN/Ro9EGBCD6+h7X4PRkoSgK9tJSim+/HXtZGSlPPEHo
      JZfg0cjkNm/mxb3/hwDMT7qCc+MvxKw7cja4M6d/zIwzo3B5JLZuq2fVNwuQFAmDaMQh2XFJ
      TjyKB7fkwiHZCdAHYpfsVHaXHuzy2Tw2lPe/RvfhupEngJ/S5exgRfWnrKz+DKe7hynrekh5
      bQexY84g7e9/x3fMGNaureXyy75m48ZLyfxJxNG+jnwez72XGVFz+nzzKx7PgQddp8OSl0fX
      hg10b9uGo7oaT1cX8Xffjd/Eidj278eUnsGVf6ggdWws/37+rEG9/hOF4vHQ9N57lP3hD5jH
      jSP9hRcw/s9qbaeznc8qPuDr6mVoBIFLk69lVuy8w+Id7rl7I7t2tqDRCIyfEMZfF59xTDbJ
      TidVTz01sgXwI12uTjY1rOPjsnewFO/j7P/Ukl4ukvTYY4Re9wtOn7GMC+Yn8cij0wAo7yrm
      wa2/ZkrEdG7Nvhuj9vBZop6SEro2bsS6cyeWnTtx1tWRcP/9CBoNPcXF+E+Zgk9GBtqAAHRh
      YWh0B8YN27Y2cu45n/PVigVM62eVk6GMu7WVikceofm994i75x5i77jjqF02RVFod7ayuuYL
      lpa9ha/WjwuTruTchIsO+jK99eY+fnPXBhQF3nrn7D5X9ntDURRVAD+iKAqS4mFT47d8XPQG
      Ph9/z/S364ieMJ0NE+7gn8tsbN56GS2aEh7NvZfpUbO4Kes3KA3N2EtLsezahSUvD1tBAcmP
      P0731q1Y9+zBPGYMfhMnYh43DsMPc9tHm+mQZYV77/meHTuaWfvtxYMSkHOiUGSZ7s2b2X/r
      rSguF+kvv0zgzJn99mWye2x8UfkRn1UsQUFhYcp1zIk9n/Z6kdTkt9BooKjk2uOO3ThuAfQ0
      lFBTXElg6ngiYkJB6qFiy2YkYzBJ48YdkhjW3tWGwS8Ed1cd1fn7MEWlERYsUFlQhF9cJlHJ
      sQicHAH8FIfHzrbmjXyz5nnin1lDfImOv1vOY8EDc2jRvoCpvpu53dkk//b31D3/PNb8/AMP
      +vjx+I4ejXns2IMeiwOhuamHiRM+4ImnTuPaa0/dai+y00ntv/5F9eLFhF16KUl/+Qv6iP5l
      bPhfOpztrKldzrLy99BqdMyJuJhfnWEjONBMSel1x11k5LgFUFuQR3RWDvV7C4nNGYu9uhCb
      XyKa9kr0YbFYyguQzTGERwdTV5BLSNokHC2lmONz6Creg1MUiEnPoWV/PqGZY3FbuxAFgbtn
      TUaj0Rw28ITD36CKohzXZz89puJ2I9vteBoa6Ni7m81fvoBV5ybyg91o7B50igdBATQaAk47
      DW1gIAjCUeMPBkJXl4tvvqlh7tx4/PxO3WIXno4OunfvJumJJ4i8/nr4n98Rjvxb9PZdt6uL
      ldXL+KryU1Y9MBp/k5lr/9bJ8TaSx/2KFQQNgkYEDhSzUCQQ9SKCoMHRWEBDfTdabQ8++ji6
      W5oRfRvR6zRoRA0aDSgIBx50jYLskWivrkDUaPB4xiPLMuJPApklSUJRlENaBlmWD273U2c0
      SZLQaDRofjJj4vF4DvlM8XhwNDfTU1SEp66O4LlzKbr1VpxlZRh8fTElJzM+dRpht/+S9htL
      kZd/i2QdvCqTYTFwVdax92mHCj6ZmST+4x/oU1Nxut3Istznb9bbd4qioJV0zI+9gnlxl7B6
      cQFV9mJ8TMfuH/Ujx90CdJbtoqGmEXNMNiFBAqLRh8rt21H0ZhIyEyjP3YMhKIqkSeOwNdXg
      Gx6Po6mYmv0V6IPjCQ+BmtJqTKHJJGQfSEvizS6QoiigKChuN57ubuzFxfhmZ1N2331YduzA
      3daG6Ot7IPzu6adxlJVhiItDGxR0YKHkFO6Hq/TNsBsEK7KMZLHgbm9HGxhI/csvH8gkUFKC
      ZLViTEpi9Ecf0bl+PdqgIHyzszFEnbqV1VWOj2HhDu3p6qL188+x7NiBJS8PV2MjutBQst97
      D9nhIPTCC/EdMwZDTAz6sDAErZbwywYWlK4yPBkWApCsVlo+/hi/iROJ+93v8J80CV1EBIJW
      S9Jf/nKyzVMZwgwLARhiYshZtuxkm6FyCnLqOZWoqHgRVQAqI5pDukApwX4EGI9/bvV4EYT/
      zvmrqAwmh0yDDhV+XMgayDSoLMuHLHr1hSRJCIIwoH0Geg63241O1/8VXUU5EIwymOeQZRlB
      EAa0vnEs5xjofVUU5ZBFz944mkdAbxztGobFIBgY0A0fqucY6IN5LAyX++S1Yw3VFgC8e6En
      6xyD/UAPh3OczN9CfOihhx4atLMeI729CRWXha1btlFa2URoeAC7t26iotlGVLCR3C2bqW1z
      EOwrs3VrLvWtVsIjwhA1hx+rt3NY2+vZtj2P+jY7gSYPmzfnYvHo8BMsbNyynR7FB7rryN1T
      iEfjS3DAkUuk9vaDNlbtZ8euAqySAcFax9bcPYj+oTjaaikoryc2Kpy60nx27C7CGBiGn+nI
      XZCjnkP2ULx3JwWFJYjmYJpL97CnqIqgsHAaSgqo7XITHuhHeWEuDVaR8KCjh1Ue9RxuG7nb
      t1NcXk9QWDCF27+nuK6L6DA/indtxaqPwEexsjN3O+W1LYRHRqETB/ZbVBfvZlf+Ptxaf+yN
      peTu3odPSCSddWWU1rUTFR5A4Y6tFBSXYwgIH/B9GpIC6B0NoZGxiD1dOKVutKHZhLubqLa7
      iIxOx8/TSGOHk4DoRHTOTszBEei1A3uzaEQ90XHxWFsaae+xkT1mApbGKho6bEyYMoWmmjKs
      Fhvpo3OorionLmZg1ckBdEYzcTHhNDd30G3tYfKUCVSWVhCfmITV0kV4qB/lVV1MGpdMZV0b
      kWG9Zzg7Er6BoUSFmGhtbMSmDWZsUij1HTbiIsPo7nEQGhyIr0lLp1UhLNhvwMcHDUERMRil
      HtyONlz+mSSI7Vj8ooj18dAiBRDmbyA8KhbB0Y7oF4ZpgO7LRt9AYqOCaWpoxiqJTB6XQUVF
      LQkJiVi62wkLDcc/KBQTPVgUH0L9B1Y66tSbBtWINFUWo4+II1AU0OkNGA0CTreCTqfFoNci
      GHzprC+n0yGjEY6hh6d4qCjeT1RaJgZBg1arRSuCBxG9VkQjCKSNSqa8uIT27p5jugzZZaWk
      ooFR6ckIooio1SMgoTcYONBgSWi0BrRaHYoiD/wEgoCtrZGadg+jEsPR6g3odFpkWcZoNPyw
      iYDheNy4RQ2tNaXIfuGEmrRojSZMBg0uScSgPzC81AgK1ZWlGEOTCPYZeMIAp7WDstpOMkbF
      I2p1B++TwWg4mPjL3t1MY6cT4zFUzTzlBsGetlI2FVQRHdJBZk4aFTvW4BL9OH1iFLm536Ho
      AshINNBk6cGNFvkYnp2a4l0U19pps0kkRpjYsG4tPsHRpIXA6tXf4BeWgN3SSXdXO1Gxxxa4
      snPbJuyiP070BGDnm9XfEJmcQ1lBHnv2lmBXjBhdDaz5tpz4rAkDPr7s6mFb7g6M/iFo9aNw
      1u/n23KZ7Injydu8hZLmTnQGA13lOyltdmM0zyQpcmDRVZ7OajbtKSMiuA1jTjqNuWuoEHyY
      Ht7Bpu/zqJFD0CQEsq+insDgbnx9J+B/lC7K0cjduhF8w1BEPaK1kTXryknMmkDhjq3kl1Yi
      a3TYWhqxOXrQ9zgHdGyA/wf76RDZrk3EYAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pounds of Meat Produced' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pounds of Meat Produced (2)' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Produced by head' width='192'>
      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
      e7B6uhvTu27jOPw1OY95bQKgwpD6tWtUPvmU4M5dnKEh8r/+K3If/QyrvX0Xa3rwaaVQ5XLj
      pHuuQFwsbm2sWBam52FkMxiOi2GZGK4HlolhO5uHJo3DE8Oxt46ljZQ8rvraBKB+6xbF//Jf
      yZ49S/7jj3GPHcV8g/f2Ym+8NgHQWqOjSDZ60VSvzb17wzDe6ON7sT9ejzMVIXaJBECkmgRA
      pJoEQKSaBECkmgRApNqOA7A6f4+rNyapx4r15Ydcn7yH0ppHC/eZmJpFEVEq1YiDGmvlWhOq
      LETz7PA+QECl7jDcWmNmvkhlYYGRTotb9zL46xv0tybMzHtEGxFWXKT72Knm1FqIJtlhADwG
      +nLcma1waNSmUB1g6K0cc/+4RNfRbvq7c9yfW2Ju6i75w2OM5V2SJNnqISYMw+YshRCvaGcB
      0AHfTc9x7OQYngPl0gwr92yyQ32sFVfJRauY+T5Gxt7DCJcplgO6Wz3pIUYcGDs7B1AKFflc
      v3qZpY2Yt470MOe3cur4IMf6cqwEbRwf7mFwsIux8XF0FDSp2kI0x2vzZTghdoNcBhWpJgEQ
      qSYBEKkmARCpJgEQqSYBEKkmARCpJgEQqSYBEKkmARCpJgEQqSYBEKkmARCpJgEQqSYBEKkm
      ARCpJgEQqSYBEKkmARCpJgEQqSYBEKkmARCpJgEQqSYBEKkmARCpJgEQqSYBEKkmARCptuOO
      spM4ItEGrmMRBnWiWOFlspBEhAqyGReVaExDk2iwLasZ9RaiKXYYgJi7N6+ybnbw0eljXPr6
      S+x8B6MnTjJz8ypBHHHivffZWPRpczZI2g9xuLetOTUXogl2GACbsXdOcXt2Ga01lWqJXK4P
      j5jOQ0c50pNhprDC3PRd2g6P8bPjbdJDjDhQdnwItMUw+OVv/hm6OsvVqRVa2i0CP8Z0s4yc
      OI1fWaQeJeRcS3qIEQfGjjvJu3L+IosVHyebJ1qeYaUSc/rchzy6N8H1ac25D0+xtuwzOpJj
      eXWDw4NdGM2puxA7Jj3EiFSTy6Ai1SQAItUkACLVJAAi1SQAItVe6jJoYfomcbYDO9PKcI/c
      yRVvjpdoAUr84fefMDV5lwtfTux+jYTYQy8RgCxDAy3cuPgtnUeHd79GQuyhlzgEirGdTnqH
      PWyd7H6NhNhDL30nOKk84JOLG/zdx2eaUrDcCRYHwUu0AD6f/e73rAZ1+o5/tPs1EmIPvTAA
      1bVZ/uf/+L/4m393RPL1ZfFmeeFJcL7zCP/63/9bjna7GIkGeZpLvGFe4ipQmaWVmMHBQWor
      G7tfIyH20AsDkCQRUdTOb/75P6Wz1eLY+JG9qpcQe+KF5wBBZZm//90n1EyPk2c+4OShnr2q
      lxB74icvg6o4ZLEwyxd/+N+stX3Af/hXv25KwXIZVBwELwxAdf0h//D3X9I+fIijx44zOtyP
      bTXn+3MSAHEQvDAAWiu0NjDN5j/FKwEQB8ELzwEMw8SQJ9jFG0yeBxCpJgEQqSYBEKkmARCp
      JgEQqSYBEKkmARCpJgEQqbbjAAS1EmulGqCplR7xcGEFrTXV9SJzi0U0Cb4foqKAqh80ocpC
      NM+Oe4gpzM6yQY6O/GEmJm6Rd2FaGazNzZBzImJzDH81IMMjsoMnyGebU3EhmmHHPcQcO3Gc
      27PLKO3T0nmI8ZN5vv3zEt1HhjjUk+Pe3BJzU3dpOTLGL9pz0kOMOFCa1kOMYbjUqutUlmo4
      Pa2UShWqdgUj08rIW+8S+0uU6jHtWVt6iBEHxs57iLlwiUf1CCfXxnC3y41CzM/OjrB8/zbT
      i3Du/V7WVwM6WtpZqZRpy3ZKDzHiwJAeYkSqyWVQkWoSAJFqEgCRahIAkWoSAJFqEgCRahIA
      kWoSAJFqEgCRahIAkWoSAJFqEgCRahIAkWoSAJFqEgCRahIAkWoSAJFqTXsmeLetl+t8+938
      5gP1miBKfjA+UeoZwzThj4YB+EH0jGExtmXg2BY5zyGbcchv/uQyLhnHIpdxyGdc8lkHy2z0
      nWBbJoZhYJmNjkRMw8DYYacKWmu0BqU1Smm01iSbr78f5gcRidJU6xFBGFOrR1TrIUGU/GCZ
      DcMg4z7dva1lmbj208Nd28Kynq6/bZk4m9ObhoG3uT6ynoNpGlhGY/kt09z8vfP1sBdemwDM
      r5b5/fk7aK0xDOOprppM8+lhlmngOk9/yFnX4ckHkw2gLe8CjSAsrlXwg5ggjAmihCCKiRNF
      ECb4YUQUKzzHwrUtWnIurm2RcW0ynk3Wc8h5Np5j05JzyTg2bTkPz7Voz2ewLIMwShrzDWP8
      MMYPIqr1iHoQU49iqv7jDTmKE8JYUQ8j/CAmihV+GGEYBo5l4jk2tm3iORaOZeI69g/Wg0YT
      x+qpdZAoTaKeHh4njR3MT00fx4r65nrJuk5j2d3G8mc9m5asS9azybg2HS0ZPMemvSXT2KF4
      Dq5j4bk2GdfCcxrTZdy93xxfm2eCtdZEsdoKwI+7bTIMsMzmHdFprYkTRZJoYqVIlCJOFFGs
      SBKFHzY21IofUg8TavWQ6uZeuFZvhKfshwRRTKkaEEQJG9U60Kint7kBZN1GWPLZxobhuY2N
      J+PaOLZJLuOQcezNlsjZmta2zK3QW6aJbT7++8frJkme3tC/b2F+TCmN4unherP1eXK6KFFE
      cULVbwS4Vg8p+431sFGp4wcxlc11FEQx65U61XpEFCfYpollmdhWo9WwrMY6cR2LfMalPe/h
      ORa2ZZJxHQwDMq6NZRp4rr3VshkYjeAYjR2bbRlbLVvGs7fWtWkaeE5jnX6/gzAM4/UJwJsi
      TlTTOhp8XUVxQi2IGodtfkQ1iKj64daOolRtBCWIEuJEUQ8iNFAPYxKlCcIYTWNdAlstXJwk
      KM1WSxUnCqU1SbJ5GLnZimndOKTLurYEQLyevm+htX4chChJ0OpxAKJE/WC6RCkS1TiHiuKE
      ci2UAIh0S3dbLFJPAiBSTQIgUk0CIFJNAiBSrYm33jTzM5M8XClx/J2zmOUCcyU4/fYI5Y2I
      fEZTDqCzLd+8IoXYoaYFQCvF4kbAu+++i6l8ri+WGWxLuDufId6IMaMivcdPNas4IZqiqV++
      CEtLnD9f5tiJMTp7u+jtznF/s4eY/OExTuZd6SFGHChNuxGmVcjS4hqeUeTOogf4DLUl1DL9
      xKUYM1qh++gpuls9DORGmDgYmtcCGA4qWGOmZPH+e8cpLd5nvmxwariHcktEa7aH1WoAeE0r
      Uoidkq9CiFSTy6Ai1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUk
      ACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi1SQAItUkACLVJAAi
      1XanZ2IVcf3iBVYqER/+5Yc8mq/RmfPZoJ0j/R27UqQQr2JX/jViUFpjZmWD0V6P2eUq1dUq
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
